{"id":"node_modules/@tensorflow/tfjs-layers/dist/engine/topology.js","dependencies":[{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js.map","includedInParent":true,"mtime":1536879379000},{"name":"E:\\htr-final\\package.json","includedInParent":true,"mtime":1603094551417},{"name":"E:\\htr-final\\.babelrc","includedInParent":true,"mtime":1603022514142},{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\package.json","includedInParent":true,"mtime":1603088140582},{"name":"@tensorflow/tfjs-core","loc":{"line":13,"column":26},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.esm.js"},{"name":"../backend/state","loc":{"line":14,"column":22},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\backend\\state.js"},{"name":"../common","loc":{"line":15,"column":23},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\common.js"},{"name":"../errors","loc":{"line":16,"column":23},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\errors.js"},{"name":"../utils/generic_utils","loc":{"line":17,"column":28},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\utils\\generic_utils.js"},{"name":"../utils/types_utils","loc":{"line":18,"column":26},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\utils\\types_utils.js"},{"name":"../utils/variable_utils","loc":{"line":19,"column":29},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\utils\\variable_utils.js"},{"name":"../variables","loc":{"line":20,"column":26},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\variables.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar state_1 = require(\"../backend/state\");\nvar common_1 = require(\"../common\");\nvar errors_1 = require(\"../errors\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar types_utils = require(\"../utils/types_utils\");\nvar variable_utils = require(\"../utils/variable_utils\");\nvar variables_1 = require(\"../variables\");\nvar InputSpec = (function () {\n    function InputSpec(config) {\n        this.dtype = config.dtype;\n        this.shape = config.shape;\n        if (config.shape != null) {\n            this.ndim = config.shape.length;\n        }\n        else {\n            this.ndim = config.ndim;\n        }\n        this.maxNDim = config.maxNDim;\n        this.minNDim = config.minNDim;\n        this.axes = config.axes || {};\n    }\n    return InputSpec;\n}());\nexports.InputSpec = InputSpec;\nvar SymbolicTensor = (function () {\n    function SymbolicTensor(dtype, shape, sourceLayer, inputs, callArgs, name, outputTensorIndex) {\n        this.dtype = dtype;\n        this.shape = shape;\n        this.sourceLayer = sourceLayer;\n        this.inputs = inputs;\n        this.callArgs = callArgs;\n        this.outputTensorIndex = outputTensorIndex;\n        this.id = state_1.getNextUniqueTensorId();\n        if (name != null) {\n            this.originalName = common_1.getScopedTensorName(name);\n            this.name = common_1.getUniqueTensorName(this.originalName);\n        }\n        this.rank = shape.length;\n    }\n    return SymbolicTensor;\n}());\nexports.SymbolicTensor = SymbolicTensor;\nvar _nextNodeID = 0;\nvar Node = (function () {\n    function Node(config, callArgs) {\n        this.callArgs = callArgs;\n        this.id = _nextNodeID++;\n        this.outboundLayer = config.outboundLayer;\n        this.inboundLayers = config.inboundLayers;\n        this.nodeIndices = config.nodeIndices;\n        this.tensorIndices = config.tensorIndices;\n        this.inputTensors = config.inputTensors;\n        this.outputTensors = config.outputTensors;\n        this.inputMasks = config.inputMasks;\n        this.outputMasks = config.outputMasks;\n        this.inputShapes = config.inputShapes;\n        this.outputShapes = config.outputShapes;\n        for (var _i = 0, _a = config.inboundLayers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            if (layer != null) {\n                layer.outboundNodes.push(this);\n            }\n        }\n        config.outboundLayer.inboundNodes.push(this);\n    }\n    Node.prototype.getConfig = function () {\n        var inboundNames = [];\n        for (var _i = 0, _a = this.inboundLayers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            if (layer != null) {\n                inboundNames.push(layer.name);\n            }\n            else {\n                inboundNames.push(null);\n            }\n        }\n        return {\n            outboundLayer: this.outboundLayer ? this.outboundLayer.name : null,\n            inboundLayers: inboundNames,\n            nodeIndices: this.nodeIndices,\n            tensorIndices: this.tensorIndices\n        };\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar _nextLayerID = 0;\nvar Layer = (function (_super) {\n    __extends(Layer, _super);\n    function Layer(config) {\n        var _this = _super.call(this) || this;\n        _this._callHook = null;\n        _this._addedWeightNames = [];\n        _this._stateful = false;\n        _this.id = _nextLayerID++;\n        _this.activityRegularizer = null;\n        _this.inputSpec = null;\n        _this.supportsMasking = false;\n        _this._trainableWeights = [];\n        _this._nonTrainableWeights = [];\n        _this._losses = [];\n        _this._updates = [];\n        _this._built = false;\n        _this.inboundNodes = [];\n        _this.outboundNodes = [];\n        var name = config.name;\n        if (!name) {\n            var prefix = _this.getClassName();\n            name = generic_utils.toSnakeCase(prefix) + '_' + state_1.getUid(prefix);\n        }\n        _this.name = name;\n        _this.trainable = config.trainable == null ? true : config.trainable;\n        _this.updatable = config.updatable == null ? true : config.updatable;\n        if (config.inputShape != null || config.batchInputShape != null) {\n            var batchInputShape = void 0;\n            if (config.batchInputShape != null) {\n                batchInputShape = config.batchInputShape;\n            }\n            else if (config.inputShape != null) {\n                var batchSize = null;\n                if (config.batchSize != null) {\n                    batchSize = config.batchSize;\n                }\n                batchInputShape = [batchSize].concat(config.inputShape);\n            }\n            _this.batchInputShape = batchInputShape;\n            var dtype = config.dtype;\n            if (dtype == null) {\n                dtype = config.inputDType;\n            }\n            if (dtype == null) {\n                dtype = 'float32';\n            }\n            _this.dtype = dtype;\n        }\n        if (config.weights != null) {\n            _this.initialWeights = config.weights;\n        }\n        else {\n            _this.initialWeights = null;\n        }\n        _this._refCount = null;\n        return _this;\n    }\n    Layer.nodeKey = function (layer, nodeIndex) {\n        return layer.name + '_ib-' + nodeIndex.toString();\n    };\n    Layer.prototype.getNodeAtIndex = function (nodeIndex, attrName) {\n        if (this.inboundNodes.length === 0) {\n            throw new errors_1.RuntimeError('The layer has never been called ' +\n                (\"and thus has no defined \" + attrName + \".\"));\n        }\n        if (this.inboundNodes.length <= nodeIndex) {\n            throw new errors_1.ValueError(\"Asked to get \" + attrName + \" at node \" + nodeIndex + \", \" +\n                (\"but the layer has only \" + this.inboundNodes.length + \" inbound nodes.\"));\n        }\n        return this.inboundNodes[nodeIndex];\n    };\n    Layer.prototype.getInputAt = function (nodeIndex) {\n        return generic_utils.singletonOrArray(this.getNodeAtIndex(nodeIndex, 'input').inputTensors);\n    };\n    Layer.prototype.getOutputAt = function (nodeIndex) {\n        return generic_utils.singletonOrArray(this.getNodeAtIndex(nodeIndex, 'output').outputTensors);\n    };\n    Object.defineProperty(Layer.prototype, \"input\", {\n        get: function () {\n            if (this.inboundNodes.length > 1) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' has multiple inbound nodes, ' +\n                    'hence the notion of \"layer input\" ' +\n                    'is ill-defined. ' +\n                    'Use `getInputAt(nodeIndex)` instead.');\n            }\n            else if (this.inboundNodes.length === 0) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' is not connected, no input to return.');\n            }\n            return generic_utils.singletonOrArray(this.getNodeAtIndex(0, 'input').inputTensors);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"output\", {\n        get: function () {\n            if (this.inboundNodes.length === 0) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' has no inbound nodes.');\n            }\n            if (this.inboundNodes.length > 1) {\n                throw new errors_1.AttributeError(\"Layer \" + this.name +\n                    ' has multiple inbound nodes, ' +\n                    'hence the notion of \"layer output\" ' +\n                    'is ill-defined. ' +\n                    'Use `getOutputAt(nodeIndex)` instead.');\n            }\n            return generic_utils.singletonOrArray(this.getNodeAtIndex(0, 'output').outputTensors);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"losses\", {\n        get: function () {\n            return this._losses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Layer.prototype.calculateLosses = function () {\n        return this.losses.map(function (lossFn) { return lossFn(); });\n    };\n    Object.defineProperty(Layer.prototype, \"updates\", {\n        get: function () {\n            return this._updates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"built\", {\n        get: function () {\n            return this._built;\n        },\n        set: function (built) {\n            this._built = built;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"trainableWeights\", {\n        get: function () {\n            if (this.trainable) {\n                return this._trainableWeights;\n            }\n            else {\n                return [];\n            }\n        },\n        set: function (weights) {\n            this._trainableWeights = weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            if (!this.trainable) {\n                return this._trainableWeights.concat(this._nonTrainableWeights);\n            }\n            else {\n                return this._nonTrainableWeights;\n            }\n        },\n        set: function (weights) {\n            this._nonTrainableWeights = weights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"weights\", {\n        get: function () {\n            return this.trainableWeights.concat(this.nonTrainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Layer.prototype, \"stateful\", {\n        get: function () {\n            return this._stateful;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Layer.prototype.resetStates = function () {\n        if (!this.stateful) {\n            throw new Error('Cannot call the resetStates() method of a non-stateful Layer ' +\n                'object.');\n        }\n    };\n    Layer.prototype.assertInputCompatibility = function (inputs) {\n        inputs = generic_utils.toList(inputs);\n        if (this.inputSpec == null || this.inputSpec.length === 0) {\n            return;\n        }\n        var inputSpec = generic_utils.toList(this.inputSpec);\n        if (inputs.length !== inputSpec.length) {\n            throw new errors_1.ValueError(\"Layer \" + this.name + \" expects \" + inputSpec.length + \" inputs, \" +\n                (\"but it received \" + inputs.length + \" input tensors. \") +\n                (\"Input received: \" + inputs));\n        }\n        for (var inputIndex = 0; inputIndex < inputs.length; inputIndex++) {\n            var x = inputs[inputIndex];\n            var spec = inputSpec[inputIndex];\n            if (spec == null) {\n                continue;\n            }\n            var ndim = x.rank;\n            if (spec.ndim != null) {\n                if (ndim !== spec.ndim) {\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name + \": \" +\n                        (\"expected ndim=\" + spec.ndim + \", found ndim=\" + ndim));\n                }\n            }\n            if (spec.maxNDim != null) {\n                if (ndim > spec.maxNDim) {\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name +\n                        (\": expected max_ndim=\" + spec.maxNDim + \", found ndim=\" + ndim));\n                }\n            }\n            if (spec.minNDim != null) {\n                if (ndim < spec.minNDim) {\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name +\n                        (\": expected min_ndim=\" + spec.minNDim + \", found ndim=\" + ndim + \".\"));\n                }\n            }\n            if (spec.dtype != null) {\n                if (x.dtype !== spec.dtype) {\n                    throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" + this.name + \" \" +\n                        (\": expected dtype=\" + spec.dtype + \", found dtype=\" + x.dtype + \".\"));\n                }\n            }\n            if (spec.axes) {\n                var xShape = x.shape;\n                for (var key in spec.axes) {\n                    var axis = Number(key);\n                    var value = spec.axes[key];\n                    var xShapeAtAxis = axis >= 0 ? xShape[axis] : xShape[xShape.length + axis];\n                    if (value != null && [value, null].indexOf(xShapeAtAxis) === -1) {\n                        throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" +\n                            (this.name + \": expected axis \" + axis + \" of input shape to \") +\n                            (\"have value \" + value + \" but got shape \" + xShape + \".\"));\n                    }\n                }\n            }\n            if (spec.shape != null) {\n                for (var i = 0; i < spec.shape.length; ++i) {\n                    var specDim = spec.shape[i];\n                    var dim = x.shape[i];\n                    if (specDim != null && dim != null) {\n                        if (specDim !== dim) {\n                            throw new errors_1.ValueError(\"Input \" + inputIndex + \" is incompatible with layer \" +\n                                (this.name + \": expected shape=\" + spec.shape + \", \") +\n                                'found shape=${xShape}.');\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Layer.prototype.call = function (inputs, kwargs) {\n        return inputs;\n    };\n    Layer.prototype.invokeCallHook = function (inputs, kwargs) {\n        if (this._callHook != null) {\n            this._callHook(inputs, kwargs);\n        }\n    };\n    Layer.prototype.setCallHook = function (callHook) {\n        this._callHook = callHook;\n    };\n    Layer.prototype.clearCallHook = function () {\n        this._callHook = null;\n    };\n    Layer.prototype.apply = function (inputs, kwargs) {\n        var _this = this;\n        kwargs = kwargs || {};\n        this.assertNotDisposed();\n        var inputsList = generic_utils.toList(inputs);\n        var allAreSymbolic = true;\n        for (var _i = 0, inputsList_1 = inputsList; _i < inputsList_1.length; _i++) {\n            var input = inputsList_1[_i];\n            if (!(input instanceof SymbolicTensor)) {\n                allAreSymbolic = false;\n                break;\n            }\n        }\n        var noneAreSymbolic = true;\n        for (var _a = 0, inputsList_2 = inputsList; _a < inputsList_2.length; _a++) {\n            var input = inputsList_2[_a];\n            if (input instanceof SymbolicTensor) {\n                noneAreSymbolic = false;\n                break;\n            }\n        }\n        if (allAreSymbolic === noneAreSymbolic) {\n            throw new errors_1.ValueError('Arguments to apply() must be all ' +\n                'SymbolicTensors or all Tensors');\n        }\n        return common_1.nameScope(this.name, function () {\n            if (!_this.built) {\n                _this.assertInputCompatibility(inputs);\n                var inputShapes = [];\n                for (var _i = 0, _a = generic_utils.toList(inputs); _i < _a.length; _i++) {\n                    var xElem = _a[_i];\n                    inputShapes.push(xElem.shape);\n                }\n                _this.build(generic_utils.singletonOrArray(inputShapes));\n                _this.built = true;\n                if (_this.initialWeights) {\n                    _this.setWeights(_this.initialWeights);\n                }\n                if (_this._refCount === null && noneAreSymbolic) {\n                    _this._refCount = 1;\n                }\n            }\n            _this.assertInputCompatibility(inputs);\n            if (noneAreSymbolic) {\n                var output = _this.call(inputs, kwargs);\n                var outputList = generic_utils.toList(output);\n                var outputListCopy = [];\n                for (var _b = 0, outputList_1 = outputList; _b < outputList_1.length; _b++) {\n                    var x = outputList_1[_b];\n                    if (inputsList.indexOf(x) !== -1) {\n                        x = x.clone();\n                    }\n                    outputListCopy.push(x);\n                }\n                output = generic_utils.singletonOrArray(outputListCopy);\n                if (_this.activityRegularizer != null) {\n                    throw new errors_1.NotImplementedError('Layer invocation in the presence of activity ' +\n                        'regularizer(s) is not supported yet.');\n                }\n                return output;\n            }\n            else {\n                var inputShape = collectInputShape(inputs);\n                var outputShape = _this.computeOutputShape(inputShape);\n                var output = void 0;\n                var outputDType_1 = guessOutputDType(inputs);\n                _this.warnOnIncompatibleInputShape(Array.isArray(inputs) ? inputShape[0] :\n                    inputShape);\n                if (outputShape != null && outputShape.length > 0 &&\n                    Array.isArray(outputShape[0])) {\n                    output = outputShape\n                        .map(function (shape, index) { return new SymbolicTensor(outputDType_1, shape, _this, generic_utils.toList(inputs), kwargs, _this.name, index); });\n                }\n                else {\n                    output = new SymbolicTensor(outputDType_1, outputShape, _this, generic_utils.toList(inputs), kwargs, _this.name);\n                }\n                _this.addInboundNode(inputs, output, null, null, inputShape, outputShape, kwargs);\n                _this._refCount++;\n                if (_this.activityRegularizer != null) {\n                    throw new errors_1.NotImplementedError('Layer invocation in the presence of activity ' +\n                        'regularizer(s) is not supported yet.');\n                }\n                return output;\n            }\n        });\n    };\n    Layer.prototype.warnOnIncompatibleInputShape = function (inputShape) {\n        if (this.batchInputShape == null) {\n            return;\n        }\n        else if (inputShape.length !== this.batchInputShape.length) {\n            console.warn(\"The rank of the input tensor provided (shape: \" +\n                (JSON.stringify(inputShape) + \") does not match that of the \") +\n                (\"batchInputShape (\" + JSON.stringify(this.batchInputShape) + \") \") +\n                (\"of the layer \" + this.name));\n        }\n        else {\n            var dimMismatch_1 = false;\n            this.batchInputShape.forEach(function (dimension, i) {\n                if (dimension != null && inputShape[i] != null &&\n                    inputShape[i] !== dimension) {\n                    dimMismatch_1 = true;\n                }\n            });\n            if (dimMismatch_1) {\n                console.warn(\"The shape of the input tensor \" +\n                    (\"(\" + JSON.stringify(inputShape) + \") does not \") +\n                    (\"match the expectation of layer \" + this.name + \": \") +\n                    (\"\" + JSON.stringify(this.batchInputShape)));\n            }\n        }\n    };\n    Object.defineProperty(Layer.prototype, \"outputShape\", {\n        get: function () {\n            if (this.inboundNodes == null || this.inboundNodes.length === 0) {\n                throw new errors_1.AttributeError(\"The layer \" + this.name + \" has never been called and thus has no \" +\n                    \"defined output shape.\");\n            }\n            var allOutputShapes = [];\n            for (var _i = 0, _a = this.inboundNodes; _i < _a.length; _i++) {\n                var node = _a[_i];\n                var shapeString = JSON.stringify(node.outputShapes);\n                if (allOutputShapes.indexOf(shapeString) === -1) {\n                    allOutputShapes.push(shapeString);\n                }\n            }\n            if (allOutputShapes.length === 1) {\n                var outputShapes = this.inboundNodes[0].outputShapes;\n                if (Array.isArray(outputShapes) && Array.isArray(outputShapes[0]) &&\n                    outputShapes.length === 1) {\n                    return outputShapes[0];\n                }\n                else {\n                    return outputShapes;\n                }\n            }\n            else {\n                throw new errors_1.AttributeError(\"The layer \" + this.name + \" has multiple inbound nodes with different \" +\n                    \"output shapes. Hence the notion of \\\"outut shape\\\" is ill-defined \" +\n                    \"for the layer.\");\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Layer.prototype.countParams = function () {\n        if (!this.built) {\n            throw new errors_1.RuntimeError(\"You tried to call countParams() on \" + this.name + \", \" +\n                \"but the layer is not built yet. Build it first by calling \" +\n                \"build(batchInputShape).\");\n        }\n        return variable_utils.countParamsInWeights(this.weights);\n    };\n    Layer.prototype.build = function (inputShape) {\n        this.built = true;\n    };\n    Layer.prototype.getWeights = function (trainableOnly) {\n        if (trainableOnly === void 0) { trainableOnly = false; }\n        return variables_1.batchGetValue(trainableOnly ? this.trainableWeights : this.weights);\n    };\n    Layer.prototype.setWeights = function (weights) {\n        var _this = this;\n        tfjs_core_1.tidy(function () {\n            var params = _this.weights;\n            if (params.length !== weights.length) {\n                throw new errors_1.ValueError(\"You called setWeights(weights) on layer \\\"\" + _this.name + \"\\\" \" +\n                    (\"with a weight list of length \" + weights.length + \", \") +\n                    (\"but the layer was expecting \" + params.length + \" weights. \") +\n                    (\"Provided weights: \" + weights + \"...\"));\n            }\n            if (params.length === 0) {\n                return;\n            }\n            var weightValueTuples = [];\n            var paramValues = variables_1.batchGetValue(params);\n            for (var i = 0; i < paramValues.length; ++i) {\n                var pv = paramValues[i];\n                var p = params[i];\n                var w = weights[i];\n                if (!tfjs_core_1.util.arraysEqual(pv.shape, w.shape)) {\n                    throw new errors_1.ValueError(\"Layer weight shape \" + pv.shape + \" \" +\n                        (\"not compatible with provided weight shape \" + w.shape));\n                }\n                weightValueTuples.push([p, w]);\n            }\n            variables_1.batchSetValue(weightValueTuples);\n        });\n    };\n    Layer.prototype.addWeight = function (name, shape, dtype, initializer, regularizer, trainable, constraint) {\n        if (this._addedWeightNames.indexOf(name) !== -1) {\n            throw new errors_1.ValueError(\"Duplicate weight name \" + name + \" for layer \" + this.name);\n        }\n        this._addedWeightNames.push(name);\n        if (dtype == null) {\n            dtype = 'float32';\n        }\n        var weight = new variables_1.LayerVariable(initializer.apply(shape, dtype), dtype, name, trainable, constraint);\n        if (regularizer != null) {\n            this.addLoss(function () { return regularizer.apply(weight.read()); });\n        }\n        if (trainable == null) {\n            trainable = true;\n        }\n        if (trainable) {\n            this._trainableWeights.push(weight);\n        }\n        else {\n            this._nonTrainableWeights.push(weight);\n        }\n        return weight;\n    };\n    Layer.prototype.addLoss = function (losses) {\n        if (losses == null || Array.isArray(losses) && losses.length === 0) {\n            return;\n        }\n        losses = generic_utils.toList(losses);\n        if (this._losses !== undefined && this._losses !== null) {\n            (_a = this.losses).push.apply(_a, losses);\n        }\n        var _a;\n    };\n    Layer.prototype.computeOutputShape = function (inputShape) {\n        return inputShape;\n    };\n    Layer.prototype.computeMask = function (inputs, mask) {\n        var _this = this;\n        if (!this.supportsMasking) {\n            if (mask != null) {\n                if (Array.isArray(mask)) {\n                    mask.forEach(function (maskElement) {\n                        if (maskElement != null) {\n                            throw new TypeError(\"Layer \" + _this.name + \" does not support masking,\" +\n                                'but was passed an inputMask.');\n                        }\n                    });\n                }\n                else {\n                    throw new TypeError(\"Layer \" + this.name + \" does not support masking,\" +\n                        'but was passed an inputMask.');\n                }\n            }\n            return null;\n        }\n        return mask;\n    };\n    Layer.prototype.addInboundNode = function (inputTensors, outputTensors, inputMasks, outputMasks, inputShapes, outputShapes, kwargs) {\n        if (kwargs === void 0) { kwargs = null; }\n        var inputTensorList = generic_utils.toList(inputTensors);\n        outputTensors = generic_utils.toList(outputTensors);\n        inputMasks = generic_utils.toList(inputMasks);\n        outputMasks = generic_utils.toList(outputMasks);\n        inputShapes = types_utils.normalizeShapeList(inputShapes);\n        outputShapes = types_utils.normalizeShapeList(outputShapes);\n        var inboundLayers = [];\n        var nodeIndices = [];\n        var tensorIndices = [];\n        for (var _i = 0, inputTensorList_1 = inputTensorList; _i < inputTensorList_1.length; _i++) {\n            var x = inputTensorList_1[_i];\n            inboundLayers.push(x.sourceLayer);\n            nodeIndices.push(x.nodeIndex);\n            tensorIndices.push(x.tensorIndex);\n        }\n        new Node({\n            outboundLayer: this,\n            inboundLayers: inboundLayers,\n            nodeIndices: nodeIndices,\n            tensorIndices: tensorIndices,\n            inputTensors: inputTensorList,\n            outputTensors: outputTensors,\n            inputMasks: inputMasks,\n            outputMasks: outputMasks,\n            inputShapes: inputShapes,\n            outputShapes: outputShapes\n        }, kwargs);\n        for (var i = 0; i < outputTensors.length; i++) {\n            outputTensors[i].sourceLayer = this;\n            outputTensors[i].nodeIndex = this.inboundNodes.length - 1;\n            outputTensors[i].tensorIndex = i;\n        }\n    };\n    Layer.prototype.getConfig = function () {\n        var config = { name: this.name, trainable: this.trainable };\n        if (this.batchInputShape != null) {\n            config['batchInputShape'] = this.batchInputShape;\n        }\n        if (this.dtype != null) {\n            config['dtype'] = this.dtype;\n        }\n        return config;\n    };\n    Layer.prototype.disposeWeights = function () {\n        this.weights.forEach(function (weight) { return weight.dispose(); });\n        return this.weights.length;\n    };\n    Layer.prototype.assertNotDisposed = function () {\n        if (this._refCount === 0) {\n            throw new Error(\"Layer '\" + this.name + \"' is already disposed.\");\n        }\n    };\n    Layer.prototype.dispose = function () {\n        if (!this.built) {\n            throw new Error(\"Cannot dispose Layer \" + this.name + \" because it has not been \" +\n                \"built yet.\");\n        }\n        if (this._refCount === null) {\n            throw new Error(\"Cannot dispose Layer \" + this.name + \" because it has not been used \" +\n                \"yet.\");\n        }\n        this.assertNotDisposed();\n        var numDisposedVariables = 0;\n        if (--this._refCount === 0) {\n            numDisposedVariables = this.disposeWeights();\n        }\n        return {\n            refCountAfterDispose: this._refCount,\n            numDisposedVariables: numDisposedVariables\n        };\n    };\n    return Layer;\n}(tfjs_core_1.serialization.Serializable));\nexports.Layer = Layer;\nfunction collectInputShape(inputTensors) {\n    inputTensors =\n        generic_utils.toList(inputTensors);\n    var shapes = [];\n    for (var _i = 0, inputTensors_1 = inputTensors; _i < inputTensors_1.length; _i++) {\n        var x = inputTensors_1[_i];\n        shapes.push(x.shape);\n    }\n    return generic_utils.singletonOrArray(shapes);\n}\nfunction guessOutputDType(inputTensors) {\n    return 'float32';\n}\nfunction getSourceInputs(tensor, layer, nodeIndex) {\n    if (layer == null || (nodeIndex != null && nodeIndex > 0)) {\n        layer = tensor.sourceLayer;\n        nodeIndex = tensor.nodeIndex;\n    }\n    if (layer.inboundNodes.length === 0) {\n        return [tensor];\n    }\n    else {\n        var node = layer.inboundNodes[nodeIndex];\n        if (node.inboundLayers.length === 0) {\n            return node.inputTensors;\n        }\n        else {\n            var sourceTensors = [];\n            for (var i = 0; i < node.inboundLayers.length; i++) {\n                var x = node.inputTensors[i];\n                var layer_1 = node.inboundLayers[i];\n                var nodeIndex_1 = node.nodeIndices[i];\n                var previousSources = getSourceInputs(x, layer_1, nodeIndex_1);\n                for (var _i = 0, previousSources_1 = previousSources; _i < previousSources_1.length; _i++) {\n                    var x_1 = previousSources_1[_i];\n                    if (sourceTensors.indexOf(x_1) === -1) {\n                        sourceTensors.push(x_1);\n                    }\n                }\n            }\n            return sourceTensors;\n        }\n    }\n}\nexports.getSourceInputs = getSourceInputs;\n"},"sourceMaps":{"js":{"version":3,"file":"topology.js","sourceRoot":"","sources":["../../src/engine/topology.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"ca530c2698fa4872f765985f1ebda2bb","cacheData":{"env":{}}}