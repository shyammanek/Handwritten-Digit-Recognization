{"id":"node_modules/@tensorflow/tfjs-layers/dist/engine/training.js","dependencies":[{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js.map","includedInParent":true,"mtime":1536879379000},{"name":"E:\\htr-final\\package.json","includedInParent":true,"mtime":1603094551417},{"name":"E:\\htr-final\\.babelrc","includedInParent":true,"mtime":1603022514142},{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\package.json","includedInParent":true,"mtime":1603088140582},{"name":"@tensorflow/tfjs-core","loc":{"line":49,"column":26},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.esm.js"},{"name":"../backend/state","loc":{"line":50,"column":22},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\backend\\state.js"},{"name":"../backend/tfjs_backend","loc":{"line":51,"column":16},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\backend\\tfjs_backend.js"},{"name":"../base_callbacks","loc":{"line":52,"column":31},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\base_callbacks.js"},{"name":"../common","loc":{"line":53,"column":23},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\common.js"},{"name":"../errors","loc":{"line":54,"column":23},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\errors.js"},{"name":"../logs","loc":{"line":55,"column":21},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\logs.js"},{"name":"../losses","loc":{"line":56,"column":21},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\losses.js"},{"name":"../metrics","loc":{"line":57,"column":22},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\metrics.js"},{"name":"../optimizers","loc":{"line":58,"column":25},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\optimizers.js"},{"name":"../utils/generic_utils","loc":{"line":59,"column":30},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\utils\\generic_utils.js"},{"name":"../utils/layer_utils","loc":{"line":60,"column":28},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\utils\\layer_utils.js"},{"name":"../utils/math_utils","loc":{"line":61,"column":27},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\utils\\math_utils.js"},{"name":"./container","loc":{"line":62,"column":26},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\container.js"},{"name":"./executor","loc":{"line":63,"column":25},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\training.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\executor.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = require(\"@tensorflow/tfjs-core\");\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar state_1 = require(\"../backend/state\");\nvar K = require(\"../backend/tfjs_backend\");\nvar base_callbacks_1 = require(\"../base_callbacks\");\nvar common_1 = require(\"../common\");\nvar errors_1 = require(\"../errors\");\nvar logs_1 = require(\"../logs\");\nvar losses = require(\"../losses\");\nvar Metrics = require(\"../metrics\");\nvar optimizers = require(\"../optimizers\");\nvar generic_utils_1 = require(\"../utils/generic_utils\");\nvar layer_utils_1 = require(\"../utils/layer_utils\");\nvar math_utils_1 = require(\"../utils/math_utils\");\nvar container_1 = require(\"./container\");\nvar executor_1 = require(\"./executor\");\nfunction isDataTensor(x) {\n    return x instanceof tfjs_core_1.Tensor;\n}\nexports.isDataTensor = isDataTensor;\nfunction isDataArray(x) {\n    return Array.isArray(x);\n}\nexports.isDataArray = isDataArray;\nfunction isDataDict(x) {\n    return !isDataTensor(x) && !isDataArray(x);\n}\nexports.isDataDict = isDataDict;\nfunction standardizeInputData(data, names, shapes, checkBatchAxis, exceptionPrefix) {\n    if (checkBatchAxis === void 0) { checkBatchAxis = true; }\n    if (exceptionPrefix === void 0) { exceptionPrefix = ''; }\n    if (names == null || names.length === 0) {\n        if (data != null) {\n            var gotUnexpectedData = false;\n            if (isDataArray(data) && data.length > 0) {\n                gotUnexpectedData = true;\n            }\n            else if (isDataDict(data)) {\n                for (var key in data) {\n                    if (data.hasOwnProperty(key)) {\n                        gotUnexpectedData = true;\n                        break;\n                    }\n                }\n            }\n            else {\n                gotUnexpectedData = true;\n            }\n            if (gotUnexpectedData) {\n                throw new errors_1.ValueError(\"Error when checking model \" + exceptionPrefix + \" expected no data, \" +\n                    (\"but got \" + data));\n            }\n        }\n        return [];\n    }\n    if (data == null) {\n        return names.map(function (name) { return null; });\n    }\n    var arrays;\n    if (isDataDict(data)) {\n        data = data;\n        arrays = [];\n        for (var _i = 0, names_1 = names; _i < names_1.length; _i++) {\n            var name_1 = names_1[_i];\n            if (data[name_1] == null) {\n                throw new errors_1.ValueError(\"No data provided for \\\"\" + name_1 + \"\\\". Need data for each key in: \" +\n                    (\"\" + names));\n            }\n            arrays.push(data[name_1]);\n        }\n    }\n    else if (isDataArray(data)) {\n        data = data;\n        if (data.length !== names.length) {\n            throw new errors_1.ValueError(\"Error when checking model \" + exceptionPrefix + \": the Array of \" +\n                \"Tensors that you are passing to your model is not the size the \" +\n                (\"model expected. Expected to see \" + names.length + \" Tensor(s), but \") +\n                (\"instead got the following list of Tensor(s): \" + data));\n        }\n        arrays = data;\n    }\n    else {\n        data = data;\n        if (names.length > 1) {\n            throw new errors_1.ValueError(\"The model \" + exceptionPrefix + \" expects \" + names.length + \" Tensor(s), \" +\n                (\"but only received one Tensor. Found: Tensor with shape \" + data.shape));\n        }\n        arrays = [data];\n    }\n    for (var i = 0; i < names.length; ++i) {\n        var array = arrays[i];\n        if (array.shape.length === 1) {\n            arrays[i] = K.expandDims(array, 1);\n        }\n    }\n    if (shapes != null) {\n        for (var i = 0; i < names.length; ++i) {\n            if (shapes[i] == null) {\n                continue;\n            }\n            var array = arrays[i];\n            if (array.shape.length !== shapes[i].length) {\n                throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" + names[i] + \" \" +\n                    (\"to have \" + shapes[i].length + \" dimension(s). but got array with \") +\n                    (\"shape \" + array.shape));\n            }\n            for (var j = 0; j < shapes[i].length; ++j) {\n                if (j === 0 && !checkBatchAxis) {\n                    continue;\n                }\n                var dim = array.shape[j];\n                var refDim = shapes[i][j];\n                if (refDim != null && refDim >= 0 && dim !== refDim) {\n                    throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" + names[i] + \" \" +\n                        (\"to have shape [\" + shapes[i] + \"], but got array with shape \") +\n                        (\"[\" + array.shape + \"].\"));\n                }\n            }\n        }\n    }\n    return arrays;\n}\nexports.standardizeInputData = standardizeInputData;\nfunction checkArrayLengths(inputs, targets, weights) {\n    var setX = generic_utils_1.unique(inputs.map(function (input) { return input.shape[0]; }));\n    setX.sort();\n    var setY = generic_utils_1.unique(targets.map(function (target) { return target.shape[0]; }));\n    setY.sort();\n    if (setX.length > 1) {\n        throw new errors_1.ValueError(\"All input Tensors (x) should have the same number of samples. \" +\n            \"Got array shapes: \" +\n            (\"\" + JSON.stringify(inputs.map(function (input) { return input.shape; }))));\n    }\n    if (setY.length > 1) {\n        throw new errors_1.ValueError(\"All target Tensors (y) should have the same number of samples. \" +\n            \"Got array shapes: \" +\n            (\"\" + JSON.stringify(targets.map(function (target) { return target.shape; }))));\n    }\n    if (setX.length > 0 && setY.length > 0 && !tfjs_core_1.util.arraysEqual(setX, setY)) {\n        throw new errors_1.ValueError(\"Input Tensors should have the same number of samples as target \" +\n            (\"Tensors. Found \" + setX[0] + \" input sample(s) and \" + setY[0] + \" target \") +\n            \"sample(s).\");\n    }\n}\nexports.checkArrayLengths = checkArrayLengths;\nfunction checkLossAndTargetCompatibility(targets, lossFns, outputShapes) {\n    var keyLosses = [\n        losses.meanSquaredError, losses.binaryCrossentropy,\n        losses.categoricalCrossentropy\n    ];\n    for (var i = 0; i < targets.length; ++i) {\n        var y = targets[i];\n        var loss = lossFns[i];\n        var shape = outputShapes[i];\n        if (loss == null) {\n            continue;\n        }\n        if (loss === losses.categoricalCrossentropy) {\n            if (y.shape[y.shape.length - 1] === 1) {\n                throw new errors_1.ValueError(\"You are passing a target array of shape \" + y.shape + \" while using \" +\n                    \"a loss 'categorical_crossentropy'. 'categorical_crossentropy'\" +\n                    \"expects targets to be binary matrices (1s and 0s) of shape \" +\n                    \"[samples, classes].\");\n            }\n        }\n        if (keyLosses.indexOf(loss) !== -1) {\n            var slicedYShape = y.shape.slice(1);\n            var slicedShape = shape.slice(1);\n            for (var j = 0; j < slicedYShape.length; ++j) {\n                var targetDim = slicedYShape[j];\n                var outDim = slicedShape[j];\n                if (outDim != null && targetDim !== outDim) {\n                    throw new errors_1.ValueError(\"A target Tensor with shape \" + y.shape + \" was passed for an \" +\n                        (\"output of shape \" + shape + \", while using a loss function that \") +\n                        \"expects targets to have the same shape as the output.\");\n                }\n            }\n        }\n    }\n}\nfunction makeBatches(size, batchSize) {\n    var output = [];\n    var batchStart = 0;\n    var batchEnd = null;\n    while (batchStart < size) {\n        batchEnd = batchStart + batchSize;\n        if (batchEnd >= size) {\n            batchEnd = size;\n        }\n        output.push([batchStart, batchEnd]);\n        batchStart = batchEnd;\n    }\n    return output;\n}\nexports.makeBatches = makeBatches;\nfunction sliceArrays(arrays, start, stop) {\n    if (arrays == null) {\n        return [null];\n    }\n    else if (Array.isArray(arrays)) {\n        return arrays.map(function (array) { return K.sliceAlongFirstAxis(array, start, stop - start); });\n    }\n    else {\n        return K.sliceAlongFirstAxis(arrays, start, stop - start);\n    }\n}\nfunction sliceArraysByIndices(arrays, indices) {\n    return tfc.tidy(function () {\n        if (arrays == null) {\n            return null;\n        }\n        else if (Array.isArray(arrays)) {\n            return arrays.map(function (array) { return sliceArraysByIndices(array, indices); });\n        }\n        else {\n            return K.gather(arrays, indices.dtype === 'int32' ? indices : indices.toInt());\n        }\n    });\n}\nexports.sliceArraysByIndices = sliceArraysByIndices;\nfunction checkInputData(data, names, shapes, checkBatchAxis, exceptionPrefix) {\n    if (checkBatchAxis === void 0) { checkBatchAxis = true; }\n    if (exceptionPrefix === void 0) { exceptionPrefix = ''; }\n    var arrays;\n    if (Array.isArray(data)) {\n        if (data.length !== names.length) {\n            throw new errors_1.ValueError(\"Error when checking model \" + exceptionPrefix + \": the Array of \" +\n                \"Tensors that you are passing to your model is not the size the \" +\n                (\"the model expected. Expected to see \" + names.length + \" Tensor(s),\") +\n                (\" but instead got \" + data.length + \" Tensors(s).\"));\n        }\n        arrays = data;\n    }\n    else {\n        if (names.length > 1) {\n            throw new errors_1.ValueError(\"The model expects \" + names.length + \" \" + exceptionPrefix + \" Tensors, \" +\n                \"but only received one Tensor. Found: array with shape \" +\n                (JSON.stringify(data.shape) + \".\"));\n        }\n        arrays = [data];\n    }\n    if (shapes != null) {\n        for (var i = 0; i < names.length; ++i) {\n            if (shapes[i] == null) {\n                continue;\n            }\n            var array = arrays[i];\n            if (array.shape.length !== shapes[i].length) {\n                throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" + names[i] + \" \" +\n                    (\"to have \" + shapes[i].length + \" dimension(s), but got array with \") +\n                    (\"shape \" + JSON.stringify(array.shape)));\n            }\n            for (var j = 0; j < shapes[i].length; ++j) {\n                if (j === 0 && !checkBatchAxis) {\n                    continue;\n                }\n                var dim = array.shape[j];\n                var refDim = shapes[i][j];\n                if (refDim != null) {\n                    if (refDim !== dim) {\n                        throw new errors_1.ValueError(\"Error when checking \" + exceptionPrefix + \": expected \" +\n                            (names[i] + \" to have shape \" + JSON.stringify(shapes[i]) + \" but \") +\n                            (\"got array with shape \" + JSON.stringify(array.shape) + \".\"));\n                    }\n                }\n            }\n        }\n    }\n}\nfunction collectMetrics(metrics, outputNames) {\n    if (metrics == null || Array.isArray(metrics) && metrics.length === 0) {\n        return outputNames.map(function (name) { return []; });\n    }\n    if (Array.isArray(metrics)) {\n        return outputNames.map(function (name) { return metrics; });\n    }\n    else if (metrics != null) {\n        var nestedMetrics = [];\n        for (var _i = 0, outputNames_1 = outputNames; _i < outputNames_1.length; _i++) {\n            var name_2 = outputNames_1[_i];\n            var outputMetrics = metrics.hasOwnProperty(name_2) ? metrics[name_2] : [];\n            if (!Array.isArray(outputMetrics)) {\n                outputMetrics = [outputMetrics];\n            }\n            nestedMetrics.push(outputMetrics);\n        }\n        return nestedMetrics;\n    }\n    else {\n        throw new TypeError('Type of metrics argument not understood. Expected an Array or ' +\n            'Object, found: ' + metrics);\n    }\n}\nvar ModelLoggingVerbosity;\n(function (ModelLoggingVerbosity) {\n    ModelLoggingVerbosity[ModelLoggingVerbosity[\"SILENT\"] = 0] = \"SILENT\";\n    ModelLoggingVerbosity[ModelLoggingVerbosity[\"VERBOSE\"] = 1] = \"VERBOSE\";\n})(ModelLoggingVerbosity = exports.ModelLoggingVerbosity || (exports.ModelLoggingVerbosity = {}));\nfunction checkBatchSize(batchSize) {\n    tfc.util.assert(batchSize > 0 && Number.isInteger(batchSize), \"batchSize is required to be a positive integer, but got \" + batchSize);\n}\nvar Model = (function (_super) {\n    __extends(Model, _super);\n    function Model(config) {\n        var _this = _super.call(this, config) || this;\n        _this.isTraining = false;\n        return _this;\n    }\n    Model.prototype.summary = function (lineLength, positions, printFn) {\n        if (printFn === void 0) { printFn = console.log; }\n        if (!this.built) {\n            throw new errors_1.ValueError(\"This model has never been called, thus its weights have not been \" +\n                \"created yet. So no summary can be displayed. Build the model \" +\n                \"first (e.g., by calling it on some test data).\");\n        }\n        layer_utils_1.printSummary(this, lineLength, positions, printFn);\n    };\n    Model.prototype.compile = function (config) {\n        var _this = this;\n        if (config.loss == null) {\n            config.loss = [];\n        }\n        this.loss = config.loss;\n        if (typeof config.optimizer === 'string') {\n            this.optimizer = optimizers.getOptimizer(config.optimizer);\n        }\n        else {\n            if (!(config.optimizer instanceof tfjs_core_1.Optimizer)) {\n                throw new errors_1.ValueError(\"User-defined optimizer must be an instance of tf.Optimizer.\");\n            }\n            this.optimizer = config.optimizer;\n        }\n        var lossFunctions = [];\n        if (!Array.isArray(config.loss) && typeof config.loss !== 'string' &&\n            typeof config.loss !== 'function') {\n            config.loss = config.loss;\n            for (var name_3 in config.loss) {\n                if (this.outputNames.indexOf(name_3) === -1) {\n                    throw new errors_1.ValueError(\"Unknown entry in loss dictionary: \\\"\" + name_3 + \"\\\". Only expect the \" +\n                        (\"following keys: \" + this.outputNames));\n                }\n            }\n            for (var name_4 in this.outputNames) {\n                if (config.loss[name_4] == null) {\n                    console.warn(\"Output \\\"\" + name_4 + \"\\\" is missing from loss dictionary. We assume \" +\n                        \"this was done on purpose, and we will not be expecting data \" +\n                        (\"to be passed to \" + name_4 + \" during training\"));\n                }\n                lossFunctions.push(losses.get(config.loss[name_4]));\n            }\n        }\n        else if (Array.isArray(config.loss)) {\n            if (config.loss.length !== this.outputs.length) {\n                throw new errors_1.ValueError(\"When passing an Array as loss, it should have one entry per \" +\n                    (\"model output. The model has \" + this.outputs.length + \" output(s), \") +\n                    (\"but you passed loss=\" + config.loss + \".\"));\n            }\n            var theLosses = config.loss;\n            lossFunctions = theLosses.map(function (l) { return losses.get(l); });\n        }\n        else {\n            var lossFunction_1 = losses.get(config.loss);\n            this.outputs.map(function (layer) {\n                lossFunctions.push(lossFunction_1);\n            });\n        }\n        this.lossFunctions = lossFunctions;\n        this.feedOutputNames = [];\n        this.feedOutputShapes = [];\n        this.feedLossFns = [];\n        for (var i = 0; i < this.outputs.length; ++i) {\n            var shape = this.internalOutputShapes[i];\n            var name_5 = this.outputNames[i];\n            this.feedOutputNames.push(name_5);\n            this.feedOutputShapes.push(shape);\n            this.feedLossFns.push(this.lossFunctions[i]);\n        }\n        var skipTargetIndices = [];\n        this.metrics = config.metrics;\n        this.metricsNames = ['loss'];\n        this.metricsTensors = [];\n        common_1.nameScope('loss', function () {\n            for (var i = 0; i < _this.outputs.length; ++i) {\n                if (skipTargetIndices.indexOf(i) !== -1) {\n                    continue;\n                }\n                var weightedLoss = _this.lossFunctions[i];\n                if (_this.outputs.length > 1) {\n                    _this.metricsTensors.push([weightedLoss, i]);\n                    _this.metricsNames.push(_this.outputNames[i] + '_loss');\n                }\n            }\n        });\n        var nestedMetrics = collectMetrics(config.metrics, this.outputNames);\n        var appendMetric = function (outputIndex, metricName, metricTensor) {\n            if (_this.outputNames.length > 1) {\n                metricName = _this.outputNames[outputIndex] + '_' + metricName;\n            }\n            _this.metricsNames.push(metricName);\n            _this.metricsTensors.push([metricTensor, outputIndex]);\n        };\n        common_1.nameScope('metric', function () {\n            var _loop_1 = function (i) {\n                if (skipTargetIndices.indexOf(i) !== -1) {\n                    return \"continue\";\n                }\n                var outputMetrics = nestedMetrics[i];\n                var handleMetrics = function (metrics) {\n                    var metricNamePrefix = '';\n                    var metricName;\n                    var accFn;\n                    var weightedMetricFn;\n                    var _loop_2 = function (metric) {\n                        if (['accuracy', 'acc', 'crossentropy', 'ce'].indexOf(metric) !==\n                            -1) {\n                            var outputShape = _this.internalOutputShapes[i];\n                            if (outputShape[outputShape.length - 1] === 1 ||\n                                _this.lossFunctions[i] === losses.binaryCrossentropy) {\n                                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.binaryAccuracy;\n                                }\n                                else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.binaryCrossentropy;\n                                }\n                            }\n                            else if (_this.lossFunctions[i] ===\n                                losses.sparseCategoricalCrossentropy) {\n                                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.sparseCategoricalAccuracy;\n                                }\n                                else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.sparseCategoricalCrossentropy;\n                                }\n                            }\n                            else {\n                                if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.categoricalAccuracy;\n                                }\n                                else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                    accFn = Metrics.categoricalCrossentropy;\n                                }\n                            }\n                            var suffix = void 0;\n                            if (['accuracy', 'acc'].indexOf(metric) !== -1) {\n                                suffix = 'acc';\n                            }\n                            else if (['crossentropy', 'ce'].indexOf(metric) !== -1) {\n                                suffix = 'ce';\n                            }\n                            weightedMetricFn = accFn;\n                            metricName = metricNamePrefix + suffix;\n                        }\n                        else {\n                            var metricFn = Metrics.get(metric);\n                            weightedMetricFn = metricFn;\n                            metricName = metricNamePrefix + metric;\n                        }\n                        var metricResult;\n                        common_1.nameScope(metricName, function () {\n                            metricResult = weightedMetricFn;\n                        });\n                        appendMetric(i, metricName, metricResult);\n                    };\n                    for (var _i = 0, metrics_1 = metrics; _i < metrics_1.length; _i++) {\n                        var metric = metrics_1[_i];\n                        _loop_2(metric);\n                    }\n                };\n                handleMetrics(outputMetrics);\n            };\n            for (var i = 0; i < _this.outputs.length; ++i) {\n                _loop_1(i);\n            }\n        });\n        this.collectedTrainableWeights = this.trainableWeights;\n    };\n    Model.prototype.checkTrainableWeightsConsistency = function () {\n        if (this.collectedTrainableWeights == null) {\n            return;\n        }\n        if (this.trainableWeights.length !==\n            this.collectedTrainableWeights.length) {\n            console.warn('Discrepancy between trainableweights and collected trainable ' +\n                'weights. Did you set `model.trainable` without calling ' +\n                '`model.compile()` afterwards?');\n        }\n    };\n    Model.prototype.evaluate = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        var batchSize = config.batchSize == null ? 32 : config.batchSize;\n        checkBatchSize(batchSize);\n        var standardizedOuts = this.standardizeUserData(x, y, true, batchSize);\n        var ins = standardizedOuts[0].concat(standardizedOuts[1]);\n        this.makeTestFunction();\n        var f = this.testFunction;\n        var testOuts = this.testLoop(f, ins, batchSize, config.verbose, config.steps);\n        return generic_utils_1.singletonOrArray(testOuts);\n    };\n    Model.prototype.checkNumSamples = function (ins, batchSize, steps, stepsName) {\n        if (stepsName === void 0) { stepsName = 'steps'; }\n        var numSamples;\n        if (steps != null) {\n            numSamples = null;\n            if (batchSize != null) {\n                throw new errors_1.ValueError(\"If \" + stepsName + \" is set, batchSize must be null or undefined.\" +\n                    (\"Got batchSize = \" + batchSize));\n            }\n        }\n        else if (ins != null) {\n            if (Array.isArray(ins)) {\n                numSamples = ins[0].shape[0];\n            }\n            else {\n                numSamples = ins.shape[0];\n            }\n        }\n        else {\n            throw new errors_1.ValueError(\"Either the input data should have a defined shape, or \" +\n                (stepsName + \" shoud be specified.\"));\n        }\n        return numSamples;\n    };\n    Model.prototype.execute = function (inputs, outputs) {\n        if (Array.isArray(outputs) && outputs.length === 0) {\n            throw new errors_1.ValueError('`outputs` is an empty Array, which is not allowed.');\n        }\n        var outputsIsArray = Array.isArray(outputs);\n        var outputNames = (outputsIsArray ? outputs :\n            [outputs]);\n        var outputSymbolicTensors = this.retrieveSymbolicTensors(outputNames);\n        var feedDict = new executor_1.FeedDict();\n        if (inputs instanceof tfjs_core_1.Tensor) {\n            inputs = [inputs];\n        }\n        if (Array.isArray(inputs)) {\n            if (inputs.length !== this.inputs.length) {\n                throw new errors_1.ValueError(\"The number of inputs provided (\" + inputs.length + \") \" +\n                    \"does not match the number of inputs of this model \" +\n                    (\"(\" + this.inputs.length + \").\"));\n            }\n            for (var i = 0; i < this.inputs.length; ++i) {\n                feedDict.add(this.inputs[i], inputs[i]);\n            }\n        }\n        else {\n            for (var _i = 0, _a = this.inputs; _i < _a.length; _i++) {\n                var input = _a[_i];\n                var tensorValue = inputs[input.name];\n                if (tensorValue == null) {\n                    throw new errors_1.ValueError(\"No value is provided for the model's input \" + input.name);\n                }\n                feedDict.add(input, tensorValue);\n            }\n        }\n        var executeOutputs = executor_1.execute(outputSymbolicTensors, feedDict);\n        return outputsIsArray ? executeOutputs : executeOutputs[0];\n    };\n    Model.prototype.retrieveSymbolicTensors = function (symbolicTensorNames) {\n        var outputSymbolicTensors = generic_utils_1.pyListRepeat(null, symbolicTensorNames.length);\n        var outputsRemaining = symbolicTensorNames.length;\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            var layerOutputs = Array.isArray(layer.output) ?\n                layer.output :\n                [layer.output];\n            var layerOutputNames = layerOutputs.map(function (output) { return output.name; });\n            for (var i = 0; i < symbolicTensorNames.length; ++i) {\n                var index = layerOutputNames.indexOf(symbolicTensorNames[i]);\n                if (index !== -1) {\n                    outputSymbolicTensors[i] = layerOutputs[index];\n                    outputsRemaining--;\n                }\n                if (outputsRemaining === 0) {\n                    break;\n                }\n            }\n            if (outputsRemaining === 0) {\n                break;\n            }\n        }\n        if (outputsRemaining > 0) {\n            var remainingNames_1 = [];\n            outputSymbolicTensors.forEach(function (tensor, i) {\n                if (tensor == null) {\n                    remainingNames_1.push(symbolicTensorNames[i]);\n                }\n            });\n            throw new errors_1.ValueError(\"Cannot find SymbolicTensors for output name(s): \" +\n                (\"\" + JSON.stringify(remainingNames_1)));\n        }\n        return outputSymbolicTensors;\n    };\n    Model.prototype.predictLoop = function (ins, batchSize, verbose) {\n        var _this = this;\n        if (batchSize === void 0) { batchSize = 32; }\n        if (verbose === void 0) { verbose = false; }\n        return tfc.tidy(function () {\n            var numSamples = _this.checkNumSamples(ins);\n            if (verbose) {\n                throw new errors_1.NotImplementedError('Verbose predictLoop() is not implemented yet.');\n            }\n            var batches = makeBatches(numSamples, batchSize);\n            var outs = [];\n            var _loop_3 = function (batchIndex) {\n                var batchOuts = tfc.tidy(function () {\n                    var batchStart = batches[batchIndex][0];\n                    var batchEnd = batches[batchIndex][1];\n                    var insBatch = sliceArrays(ins, batchStart, batchEnd);\n                    var feeds = [];\n                    if (Array.isArray(insBatch)) {\n                        for (var i = 0; i < insBatch.length; ++i) {\n                            feeds.push({ key: _this.inputs[i], value: insBatch[i] });\n                        }\n                    }\n                    else {\n                        feeds.push({ key: _this.inputs[0], value: insBatch });\n                    }\n                    var feedDict = new executor_1.FeedDict(feeds);\n                    return executor_1.execute(_this.outputs, feedDict);\n                });\n                if (batchIndex === 0) {\n                    for (var _i = 0, batchOuts_1 = batchOuts; _i < batchOuts_1.length; _i++) {\n                        var batchOut = batchOuts_1[_i];\n                        outs.push(batchOut);\n                    }\n                }\n                else {\n                    for (var i = 0; i < batchOuts.length; ++i) {\n                        outs[i] = K.concatAlongFirstAxis(outs[i], batchOuts[i]);\n                    }\n                }\n            };\n            for (var batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n                _loop_3(batchIndex);\n            }\n            return generic_utils_1.singletonOrArray(outs);\n        });\n    };\n    Model.prototype.predict = function (x, config) {\n        if (config === void 0) { config = {}; }\n        checkInputData(x, this.inputNames, this.feedInputShapes, false);\n        var batchSize = config.batchSize == null ? 32 : config.batchSize;\n        checkBatchSize(batchSize);\n        return this.predictLoop(x, batchSize);\n    };\n    Model.prototype.predictOnBatch = function (x) {\n        checkInputData(x, this.inputNames, this.feedInputShapes, true);\n        return this.predictLoop(x, x.shape[0]);\n    };\n    Model.prototype.standardizeUserData = function (x, y, checkBatchAxis, batchSize) {\n        if (checkBatchAxis === void 0) { checkBatchAxis = true; }\n        if (this.optimizer == null) {\n            throw new errors_1.RuntimeError('You must compile a model before training/testing. Use ' +\n                'Model.compile(modelCompileConfig).');\n        }\n        var outputShapes = [];\n        for (var i = 0; i < this.feedOutputShapes.length; ++i) {\n            var outputShape = this.feedOutputShapes[i];\n            var lossFn = this.feedLossFns[i];\n            if (lossFn === losses.sparseCategoricalCrossentropy) {\n                outputShapes.push(outputShape.slice(0, outputShape.length - 1).concat([1]));\n            }\n            else {\n                outputShapes.push(outputShape);\n            }\n        }\n        x = standardizeInputData(x, this.feedInputNames, this.feedInputShapes, false, 'input');\n        y = standardizeInputData(y, this.feedOutputNames, outputShapes, false, 'target');\n        checkArrayLengths(x, y, null);\n        checkLossAndTargetCompatibility(y, this.feedLossFns, this.feedOutputShapes);\n        if (this.stateful && batchSize != null && batchSize > 0) {\n            if (x[0].shape[0] % batchSize !== 0) {\n                throw new errors_1.ValueError(\"In a stateful network, you should only pass inputs with a \" +\n                    \"number of samples that is divisible by the batch size \" +\n                    (batchSize + \". Found: \" + x[0].shape[0] + \" sample(s).\"));\n            }\n        }\n        return [x, y, null];\n    };\n    Model.prototype.fitLoop = function (f, ins, outLabels, batchSize, epochs, verbose, callbacks, valF, valIns, shuffle, callbackMetrics, initialEpoch, stepsPerEpoch, validationSteps, yieldEvery) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var doValidation, numTrainSamples, indexArray, actualCallbacks, callbackList, _loop_4, this_1, epoch, state_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (batchSize == null) {\n                            batchSize = 32;\n                        }\n                        if (epochs == null) {\n                            epochs = 1;\n                        }\n                        if (shuffle == null) {\n                            shuffle = true;\n                        }\n                        if (initialEpoch == null) {\n                            initialEpoch = 0;\n                        }\n                        doValidation = false;\n                        if (valF != null && valIns != null) {\n                            doValidation = true;\n                        }\n                        if (validationSteps != null) {\n                            doValidation = true;\n                            if (stepsPerEpoch == null) {\n                                throw new errors_1.ValueError('Can only use `validationSteps` when doing step-wise training, ' +\n                                    'i.e., `stepsPerEpoch` must be set.');\n                            }\n                        }\n                        numTrainSamples = this.checkNumSamples(ins, batchSize, stepsPerEpoch, 'steps_per_epoch');\n                        if (numTrainSamples != null) {\n                            indexArray = math_utils_1.range(0, numTrainSamples);\n                        }\n                        if (verbose == null) {\n                            verbose = 1;\n                        }\n                        this.history = new base_callbacks_1.History();\n                        actualCallbacks = [\n                            new base_callbacks_1.BaseLogger(yieldEvery)\n                        ].concat(base_callbacks_1.CallbackConstructorRegistry.createCallbacks(verbose));\n                        if (callbacks != null) {\n                            actualCallbacks.push.apply(actualCallbacks, callbacks);\n                        }\n                        actualCallbacks.push(this.history);\n                        callbackList = new base_callbacks_1.CallbackList(actualCallbacks);\n                        callbackList.setModel(this);\n                        callbackList.setParams({\n                            epochs: epochs,\n                            initialEpoch: initialEpoch,\n                            samples: numTrainSamples,\n                            steps: stepsPerEpoch,\n                            batchSize: batchSize,\n                            verbose: verbose,\n                            doValidation: doValidation,\n                            metrics: callbackMetrics,\n                        });\n                        return [4, callbackList.onTrainBegin()];\n                    case 1:\n                        _a.sent();\n                        this.stopTraining_ = false;\n                        _loop_4 = function (epoch) {\n                            var epochLogs, epochIndexArray1D_1, batches_1, _loop_5, batchIndex, state_3;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4, callbackList.onEpochBegin(epoch)];\n                                    case 1:\n                                        _a.sent();\n                                        epochLogs = {};\n                                        if (!(stepsPerEpoch != null)) return [3, 2];\n                                        throw new errors_1.NotImplementedError('stepsPerEpoch mode is not implemented yet.');\n                                    case 2:\n                                        if (shuffle === 'batch') {\n                                            throw new errors_1.NotImplementedError('batch shuffling is not implemneted yet');\n                                        }\n                                        else if (shuffle) {\n                                            tfjs_core_1.util.shuffle(indexArray);\n                                        }\n                                        epochIndexArray1D_1 = tfjs_core_1.tensor1d(indexArray);\n                                        batches_1 = makeBatches(numTrainSamples, batchSize);\n                                        _loop_5 = function (batchIndex) {\n                                            var batchLogs;\n                                            return __generator(this, function (_a) {\n                                                switch (_a.label) {\n                                                    case 0:\n                                                        batchLogs = {};\n                                                        return [4, callbackList.onBatchBegin(batchIndex, batchLogs)];\n                                                    case 1:\n                                                        _a.sent();\n                                                        tfc.tidy(function () {\n                                                            var batchStart = batches_1[batchIndex][0];\n                                                            var batchEnd = batches_1[batchIndex][1];\n                                                            var batchIds = K.sliceAlongFirstAxis(epochIndexArray1D_1, batchStart, batchEnd - batchStart);\n                                                            batchLogs['batch'] = batchIndex;\n                                                            batchLogs['size'] = batchEnd - batchStart;\n                                                            var insBatch = sliceArraysByIndices(ins, batchIds);\n                                                            var outs = f(insBatch);\n                                                            for (var i = 0; i < outLabels.length; ++i) {\n                                                                var label = outLabels[i];\n                                                                var out = outs[i];\n                                                                batchLogs[label] = out;\n                                                                tfc.keep(out);\n                                                            }\n                                                            if (batchIndex === batches_1.length - 1) {\n                                                                if (doValidation) {\n                                                                    var valOuts = _this.testLoop(valF, valIns, batchSize);\n                                                                    for (var i = 0; i < outLabels.length; ++i) {\n                                                                        var label = outLabels[i];\n                                                                        var out = valOuts[i];\n                                                                        tfc.keep(out);\n                                                                        epochLogs['val_' + label] = out;\n                                                                    }\n                                                                }\n                                                            }\n                                                        });\n                                                        return [4, callbackList.onBatchEnd(batchIndex, batchLogs)];\n                                                    case 2:\n                                                        _a.sent();\n                                                        logs_1.disposeTensorsInLogs(batchLogs);\n                                                        if (this_1.stopTraining_) {\n                                                            return [2, \"break\"];\n                                                        }\n                                                        return [2];\n                                                }\n                                            });\n                                        };\n                                        batchIndex = 0;\n                                        _a.label = 3;\n                                    case 3:\n                                        if (!(batchIndex < batches_1.length)) return [3, 6];\n                                        return [5, _loop_5(batchIndex)];\n                                    case 4:\n                                        state_3 = _a.sent();\n                                        if (state_3 === \"break\")\n                                            return [3, 6];\n                                        _a.label = 5;\n                                    case 5:\n                                        ++batchIndex;\n                                        return [3, 3];\n                                    case 6:\n                                        epochIndexArray1D_1.dispose();\n                                        _a.label = 7;\n                                    case 7: return [4, callbackList.onEpochEnd(epoch, epochLogs)];\n                                    case 8:\n                                        _a.sent();\n                                        if (this_1.stopTraining_) {\n                                            return [2, \"break\"];\n                                        }\n                                        return [2];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        epoch = initialEpoch;\n                        _a.label = 2;\n                    case 2:\n                        if (!(epoch < epochs)) return [3, 5];\n                        return [5, _loop_4(epoch)];\n                    case 3:\n                        state_2 = _a.sent();\n                        if (state_2 === \"break\")\n                            return [3, 5];\n                        _a.label = 4;\n                    case 4:\n                        ++epoch;\n                        return [3, 2];\n                    case 5: return [4, callbackList.onTrainEnd()];\n                    case 6:\n                        _a.sent();\n                        return [4, this.history.syncData()];\n                    case 7:\n                        _a.sent();\n                        return [2, this.history];\n                }\n            });\n        });\n    };\n    Model.prototype.testLoop = function (f, ins, batchSize, verbose, steps) {\n        var _this = this;\n        if (verbose === void 0) { verbose = 0; }\n        return tfc.tidy(function () {\n            var numSamples = _this.checkNumSamples(ins, batchSize, steps, 'steps');\n            var outs = [];\n            if (verbose === 1) {\n                throw new errors_1.NotImplementedError('Verbose mode is not implemented yet.');\n            }\n            if (steps != null) {\n                throw new errors_1.NotImplementedError('steps mode in testLoop() is not implemented yet');\n            }\n            else {\n                var batches = makeBatches(numSamples, batchSize);\n                var indexArray = tfjs_core_1.tensor1d(math_utils_1.range(0, numSamples));\n                for (var batchIndex = 0; batchIndex < batches.length; ++batchIndex) {\n                    var batchStart = batches[batchIndex][0];\n                    var batchEnd = batches[batchIndex][1];\n                    var batchIds = K.sliceAlongFirstAxis(indexArray, batchStart, batchEnd - batchStart);\n                    var insBatch = sliceArraysByIndices(ins, batchIds);\n                    var batchOuts = f(insBatch);\n                    if (batchIndex === 0) {\n                        for (var i = 0; i < batchOuts.length; ++i) {\n                            outs.push(state_1.getScalar(0));\n                        }\n                    }\n                    for (var i = 0; i < batchOuts.length; ++i) {\n                        var batchOut = batchOuts[i];\n                        outs[i] =\n                            tfc.add(outs[i], tfc.mul(state_1.getScalar(batchEnd - batchStart), batchOut));\n                    }\n                }\n                for (var i = 0; i < outs.length; ++i) {\n                    outs[i] = tfc.div(outs[i], state_1.getScalar(numSamples));\n                }\n            }\n            return outs;\n        });\n    };\n    Model.prototype.getDedupedMetricsNames = function () {\n        var outLabels = this.metricsNames;\n        var dedupedOutLabels = [];\n        for (var i = 0; i < outLabels.length; ++i) {\n            var label = outLabels[i];\n            var newLabel = label;\n            if (generic_utils_1.count(outLabels, label) > 1) {\n                var dupIndex = generic_utils_1.count(outLabels.slice(0, i), label);\n                newLabel += \"_\" + dupIndex;\n            }\n            dedupedOutLabels.push(newLabel);\n        }\n        return dedupedOutLabels;\n    };\n    Model.prototype.makeTestFunction = function () {\n        var _this = this;\n        this.testFunction = function (data) {\n            return tfc.tidy(function () {\n                var valOutputs = [];\n                var totalLoss;\n                var inputs = data.slice(0, _this.inputs.length);\n                var targets = data.slice(_this.inputs.length, _this.inputs.length + _this.outputs.length);\n                var feeds = [];\n                for (var i = 0; i < _this.inputs.length; ++i) {\n                    feeds.push({ key: _this.inputs[i], value: inputs[i] });\n                }\n                var feedDict = new executor_1.FeedDict(feeds);\n                var outputs = executor_1.execute(_this.outputs, feedDict);\n                for (var i = 0; i < _this.lossFunctions.length; ++i) {\n                    var lossFunction = _this.lossFunctions[i];\n                    var loss = tfc.mean(lossFunction(targets[i], outputs[i]));\n                    if (i === 0) {\n                        totalLoss = loss;\n                    }\n                    else {\n                        totalLoss = tfc.add(totalLoss, loss);\n                    }\n                    valOutputs.push(totalLoss);\n                }\n                for (var i = 0; i < _this.metricsTensors.length; ++i) {\n                    var metric = _this.metricsTensors[i][0];\n                    var outputIndex = _this.metricsTensors[i][1];\n                    var meanMetric = tfc.mean(metric(targets[outputIndex], outputs[outputIndex]));\n                    valOutputs.push(meanMetric);\n                }\n                return valOutputs;\n            });\n        };\n    };\n    Model.prototype.fit = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var batchSize, standardizedOuts, inputs, targets, doValidation, valX, valY, valIns, needValidationDisposal, valStandardized, splitAt, originalBatchSize, ins, trainFunction, outLabels, valFunction, callbackMetrics, callbacks, out;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isTraining) {\n                            throw new Error('Cannot start training because another fit() call is ongoing.');\n                        }\n                        this.isTraining = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 4]);\n                        batchSize = config.batchSize == null ? 32 : config.batchSize;\n                        checkBatchSize(batchSize);\n                        standardizedOuts = this.standardizeUserData(x, y, false, batchSize);\n                        inputs = standardizedOuts[0];\n                        targets = standardizedOuts[1];\n                        doValidation = false;\n                        valX = void 0;\n                        valY = void 0;\n                        valIns = void 0;\n                        needValidationDisposal = false;\n                        if (config.validationData != null && config.validationData.length > 0) {\n                            doValidation = true;\n                            if (config.validationData.length === 2) {\n                                valX = config.validationData[0];\n                                valY = config.validationData[1];\n                            }\n                            else if (config.validationData.length === 3) {\n                                throw new errors_1.NotImplementedError('validationData including sample weights is not supported yet.');\n                            }\n                            else {\n                                throw new errors_1.ValueError(\"When passing validation data, it must contain 2 (valX, valY) \" +\n                                    \"or 3 (valX, valY, valSampleWeight) items; \" +\n                                    (config.validationData + \" is invalid.\"));\n                            }\n                            valStandardized = this.standardizeUserData(valX, valY, true, batchSize);\n                            valX = valStandardized[0];\n                            valY = valStandardized[1];\n                            valIns = valX.concat(valY);\n                        }\n                        else if (config.validationSplit != null && config.validationSplit > 0 &&\n                            config.validationSplit < 1) {\n                            doValidation = true;\n                            splitAt = Math.floor(inputs[0].shape[0] * (1 - config.validationSplit));\n                            originalBatchSize = inputs[0].shape[0];\n                            valX = sliceArrays(inputs, splitAt, originalBatchSize);\n                            inputs = sliceArrays(inputs, 0, splitAt);\n                            valY = sliceArrays(targets, splitAt, originalBatchSize);\n                            targets = sliceArrays(targets, 0, splitAt);\n                            needValidationDisposal = true;\n                            valIns = valX.concat(valY);\n                        }\n                        else if (config.validationSteps != null) {\n                            doValidation = true;\n                        }\n                        ins = inputs.concat(targets);\n                        this.checkTrainableWeightsConsistency();\n                        trainFunction = function (data) {\n                            var losses = [];\n                            var lossValues = [];\n                            var inputs = data.slice(0, _this.inputs.length);\n                            var targets = data.slice(_this.inputs.length, _this.inputs.length + _this.outputs.length);\n                            var metricsValues = [];\n                            var totalLossFunction = function () {\n                                var feeds = [];\n                                for (var i = 0; i < _this.inputs.length; ++i) {\n                                    feeds.push({ key: _this.inputs[i], value: inputs[i] });\n                                }\n                                var feedDict = new executor_1.FeedDict(feeds);\n                                var outputs = executor_1.execute(_this.outputs, feedDict, { 'training': true });\n                                var totalLoss;\n                                for (var i = 0; i < _this.lossFunctions.length; ++i) {\n                                    var lossFunction = _this.lossFunctions[i];\n                                    var loss = lossFunction(targets[i], outputs[i]);\n                                    losses.push(loss);\n                                    var meanLoss = tfc.mean(loss);\n                                    lossValues.push(meanLoss);\n                                    if (i === 0) {\n                                        totalLoss = loss;\n                                    }\n                                    else {\n                                        totalLoss = tfc.add(totalLoss, loss);\n                                    }\n                                }\n                                for (var i = 0; i < _this.metricsTensors.length; ++i) {\n                                    var metric = _this.metricsTensors[i][0];\n                                    var outputIndex = _this.metricsTensors[i][1];\n                                    var meanMetric = tfc.mean(metric(targets[outputIndex], outputs[outputIndex]));\n                                    tfc.keep(meanMetric);\n                                    metricsValues.push(meanMetric);\n                                }\n                                totalLoss = tfc.mean(totalLoss);\n                                _this.calculateLosses().forEach(function (regularizerLoss) {\n                                    totalLoss = tfc.add(totalLoss, regularizerLoss);\n                                });\n                                return totalLoss;\n                            };\n                            var variables = _this.collectedTrainableWeights.map(function (param) { return param.read(); });\n                            var returnCost = true;\n                            var totalLossValue = _this.optimizer.minimize(totalLossFunction, returnCost, variables);\n                            return [totalLossValue].concat(metricsValues);\n                        };\n                        outLabels = this.getDedupedMetricsNames();\n                        valFunction = void 0;\n                        callbackMetrics = void 0;\n                        if (doValidation) {\n                            this.makeTestFunction();\n                            valFunction = this.testFunction;\n                            callbackMetrics =\n                                outLabels.slice().concat(outLabels.map(function (n) { return 'val_' + n; }));\n                        }\n                        else {\n                            valFunction = null;\n                            valIns = [];\n                            callbackMetrics = outLabels.slice();\n                        }\n                        callbacks = base_callbacks_1.standardizeCallbacks(config.callbacks);\n                        return [4, this.fitLoop(trainFunction, ins, outLabels, batchSize, config.epochs, config.verbose, callbacks, valFunction, valIns, config.shuffle, callbackMetrics, config.initialEpoch, null, null, config.yieldEvery)];\n                    case 2:\n                        out = _a.sent();\n                        if (needValidationDisposal) {\n                            valIns.forEach(function (tensor) { return tensor.dispose(); });\n                            inputs.forEach(function (tensor) { return tensor.dispose(); });\n                            targets.forEach(function (tensor) { return tensor.dispose(); });\n                        }\n                        this.isTraining = false;\n                        return [2, out];\n                    case 3:\n                        this.isTraining = false;\n                        return [7];\n                    case 4: return [2];\n                }\n            });\n        });\n    };\n    Model.prototype.getNamedWeights = function (config) {\n        var namedWeights = {};\n        var trainableOnly = config != null && config.trainableOnly;\n        var weights = trainableOnly ? this.trainableWeights : this.weights;\n        var weightValues = this.getWeights(trainableOnly);\n        for (var i = 0; i < weights.length; ++i) {\n            if (trainableOnly && !weights[i].trainable) {\n                continue;\n            }\n            namedWeights[weights[i].originalName] = weightValues[i];\n        }\n        return namedWeights;\n    };\n    Object.defineProperty(Model.prototype, \"stopTraining\", {\n        set: function (stop) {\n            this.stopTraining_ = stop;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Model.prototype.save = function (handlerOrURL, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var handlers, weightDataAndSpecs, returnString, unusedArg, modelConfig;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (typeof handlerOrURL === 'string') {\n                            handlers = tfjs_core_1.io.getSaveHandlers(handlerOrURL);\n                            if (handlers.length === 0) {\n                                throw new errors_1.ValueError(\"Cannot find any save handlers for URL '\" + handlerOrURL + \"'\");\n                            }\n                            else if (handlers.length > 1) {\n                                throw new errors_1.ValueError(\"Found more than one (\" + handlers.length + \") save handlers for \" +\n                                    (\"URL '\" + handlerOrURL + \"'\"));\n                            }\n                            handlerOrURL = handlers[0];\n                        }\n                        if (handlerOrURL.save == null) {\n                            throw new errors_1.ValueError('Model.save() cannot proceed because the IOHandler provided does ' +\n                                'not have the `save` attribute defined.');\n                        }\n                        return [4, tfjs_core_1.io.encodeWeights(this.getNamedWeights(config))];\n                    case 1:\n                        weightDataAndSpecs = _a.sent();\n                        returnString = false;\n                        unusedArg = null;\n                        modelConfig = this.toJSON(unusedArg, returnString);\n                        return [2, handlerOrURL.save({\n                                modelTopology: modelConfig,\n                                weightData: weightDataAndSpecs.data,\n                                weightSpecs: weightDataAndSpecs.specs\n                            })];\n                }\n            });\n        });\n    };\n    Model.className = 'Model';\n    return Model;\n}(container_1.Container));\nexports.Model = Model;\ntfjs_core_1.serialization.registerClass(Model);\n"},"sourceMaps":{"js":{"version":3,"file":"training.js","sourceRoot":"","sources":["../../src/engine/training.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"31f513c940bafb36fa1d883a51fe059c","cacheData":{"env":{}}}