{"id":"node_modules/@tensorflow/tfjs-core/dist/tape.js","dependencies":[{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\tape.js.map","includedInParent":true,"mtime":499162500000},{"name":"E:\\htr-final\\package.json","includedInParent":true,"mtime":1603094551417},{"name":"E:\\htr-final\\.babelrc","includedInParent":true,"mtime":1603022514142},{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1603088140582},{"name":"./tensor","loc":{"line":3,"column":23},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\tape.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor.js"},{"name":"./util","loc":{"line":4,"column":19},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\tape.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\util.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_1 = require(\"./tensor\");\nvar util = require(\"./util\");\nfunction getFilteredNodesXToY(tape, xs, y) {\n    var tensorsFromX = {};\n    var nodesFromX = {};\n    for (var i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        var nodeInputs = node.inputs;\n        for (var inputName in nodeInputs) {\n            var input = nodeInputs[inputName];\n            var anyInputFromX = false;\n            for (var j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    node.outputs.forEach(function (output) { return tensorsFromX[output.id] = true; });\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    var tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    var nodesToY = {};\n    for (var i = tape.length - 1; i >= 0; i--) {\n        var node = tape[i];\n        var nodeInputs = node.inputs;\n        for (var j = 0; j < node.outputs.length; j++) {\n            if (tensorsLeadToY[node.outputs[j].id]) {\n                for (var inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    var filteredTape = [];\n    for (var i = 0; i < tape.length; i++) {\n        var node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            var prunedInputs = {};\n            for (var inputName in node.inputs) {\n                var nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            var prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.outputs = node.outputs;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\nexports.getFilteredNodesXToY = getFilteredNodesXToY;\nfunction backpropagateGradients(tensorAccumulatedGradientMap, filteredTape) {\n    var _loop_1 = function (i) {\n        var node = filteredTape[i];\n        var dys = [];\n        node.outputs.forEach(function (o) {\n            var gradTensor = tensorAccumulatedGradientMap[o.id];\n            if (gradTensor != null) {\n                dys.push(gradTensor);\n            }\n            else {\n                var dy = tensor_1.Tensor.make(o.shape, { values: util.makeZerosTypedArray(o.size, o.dtype) }, o.dtype);\n                dys.push(dy);\n            }\n        });\n        if (node.gradient == null) {\n            throw new Error(\"Cannot compute gradient: gradient function not found \" +\n                (\"for \" + node.name + \".\"));\n        }\n        var inputGradients = node.gradient(node.outputs.length === 1 ? dys[0] : dys);\n        for (var inputName in node.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(\"Cannot backprop through input \" + inputName + \". \" +\n                    (\"Available gradients found: \" + Object.keys(inputGradients) + \".\"));\n            }\n            var dx = inputGradients[inputName]();\n            var x = node.inputs[inputName];\n            if (!util.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(\"Error in gradient for op \" + node.name + \". The gradient of input \" +\n                    (\"'\" + inputName + \"' has shape '\" + dx.shape + \"', which does not match \") +\n                    (\"the shape of the input '\" + x.shape + \"'\"));\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                var curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = curGradient.add(dx);\n                curGradient.dispose();\n            }\n        }\n    };\n    for (var i = filteredTape.length - 1; i >= 0; i--) {\n        _loop_1(i);\n    }\n}\nexports.backpropagateGradients = backpropagateGradients;\n"},"sourceMaps":{"js":{"version":3,"file":"tape.js","sourceRoot":"","sources":["../src/tape.ts"],"names":[],"mappings":";;AAiBA,mCAAgC;AAEhC,6BAA+B;AAuB/B,8BACI,IAAgB,EAAE,EAAY,EAAE,CAAS;IAG3C,IAAM,YAAY,GAAkC,EAAE,CAAC;IACvD,IAAM,UAAU,GAAgC,EAAE,CAAC;IACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;KAC/B;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,KAAK,IAAM,SAAS,IAAI,UAAU,EAAE;YAClC,IAAM,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;YAEpC,IAAI,aAAa,GAAG,KAAK,CAAC;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;oBAC1B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,EAA9B,CAA8B,CAAC,CAAC;oBAC/D,aAAa,GAAG,IAAI,CAAC;oBACrB,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;oBAC3B,MAAM;iBACP;aACF;YAED,IAAI,aAAa,EAAE;gBACjB,MAAM;aACP;SACF;KACF;IAGD,IAAM,cAAc,GAAkC,EAAE,CAAC;IACzD,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;IAC5B,IAAM,QAAQ,GAAgC,EAAE,CAAC;IAEjD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QACzC,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAG/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;gBACtC,KAAK,IAAM,SAAS,IAAI,UAAU,EAAE;oBAClC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;oBAChD,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;iBAC1B;gBACD,MAAM;aACP;SACF;KACF;IAGD,IAAM,YAAY,GAAe,EAAE,CAAC;IACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAErB,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YAE5C,IAAM,YAAY,GAAkC,EAAE,CAAC;YACvD,KAAK,IAAM,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE;gBACnC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACzC,IAAI,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;oBAC9B,YAAY,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;iBACrC;aACF;YAGD,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAa,CAAC;YACvD,UAAU,CAAC,MAAM,GAAG,YAAY,CAAC;YACjC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAElC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC/B;KACF;IAED,OAAO,YAAY,CAAC;AACtB,CAAC;AA9ED,oDA8EC;AASD,gCACI,4BAA0D,EAC1D,YAAwB;4BAEjB,CAAC;QACR,IAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAE7B,IAAM,GAAG,GAAa,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,CAAC;YACpB,IAAM,UAAU,GAAG,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACtD,IAAI,UAAU,IAAI,IAAI,EAAE;gBACtB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACtB;iBAAM;gBAGL,IAAM,EAAE,GAAG,eAAM,CAAC,IAAI,CAClB,CAAC,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,EAAC,EAC5D,CAAC,CAAC,KAAK,CAAC,CAAC;gBACb,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACd;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;YACzB,MAAM,IAAI,KAAK,CACX,uDAAuD;iBACvD,SAAO,IAAI,CAAC,IAAI,MAAG,CAAA,CAAC,CAAC;SAC1B;QAGD,IAAM,cAAc,GAGhB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC5D,KAAK,IAAM,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE;YACnC,IAAI,CAAC,CAAC,SAAS,IAAI,cAAc,CAAC,EAAE;gBAClC,MAAM,IAAI,KAAK,CACX,mCAAiC,SAAS,OAAI;qBAC9C,gCAA8B,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,MAAG,CAAA,CAAC,CAAC;aACnE;YAGD,IAAM,EAAE,GAAG,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC;YACvC,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;gBACxC,MAAM,IAAI,KAAK,CACX,8BAA4B,IAAI,CAAC,IAAI,6BAA0B;qBAC/D,MAAI,SAAS,qBAAgB,EAAE,CAAC,KAAK,6BAA0B,CAAA;qBAC/D,6BAA2B,CAAC,CAAC,KAAK,MAAG,CAAA,CAAC,CAAC;aAC5C;YAED,IAAI,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;gBAC9C,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;aACzC;iBAAM;gBACL,IAAM,WAAW,GAAG,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACvD,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACzD,WAAW,CAAC,OAAO,EAAE,CAAC;aACvB;SACF;IACH,CAAC;IAtDD,KAAK,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAAxC,CAAC;KAsDT;AACH,CAAC;AA3DD,wDA2DC","sourcesContent":[null]}},"error":null,"hash":"3feb4e5db195daeb5240c01e68a86b65","cacheData":{"env":{}}}