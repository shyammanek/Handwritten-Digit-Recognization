{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/segment_ops.js","dependencies":[{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js.map","includedInParent":true,"mtime":499162500000},{"name":"E:\\htr-final\\package.json","includedInParent":true,"mtime":1603094551417},{"name":"E:\\htr-final\\.babelrc","includedInParent":true,"mtime":1603022514142},{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1603088140582},{"name":"../environment","loc":{"line":3,"column":28},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\environment.js"},{"name":"../tensor_util_env","loc":{"line":4,"column":32},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor_util_env.js"},{"name":"../util","loc":{"line":5,"column":21},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\util.js"},{"name":"./array_ops","loc":{"line":6,"column":26},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\array_ops.js"},{"name":"./axis_util","loc":{"line":7,"column":26},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\axis_util.js"},{"name":"./binary_ops","loc":{"line":8,"column":27},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\binary_ops.js"},{"name":"./compare","loc":{"line":9,"column":24},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\compare.js"},{"name":"./logical_ops","loc":{"line":10,"column":28},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\logical_ops.js"},{"name":"./operation","loc":{"line":11,"column":26},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\operation.js"},{"name":"./tensor_ops","loc":{"line":12,"column":27},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\segment_ops.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\tensor_ops.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar tensor_util_env_1 = require(\"../tensor_util_env\");\nvar util_1 = require(\"../util\");\nvar array_ops_1 = require(\"./array_ops\");\nvar axis_util_1 = require(\"./axis_util\");\nvar binary_ops_1 = require(\"./binary_ops\");\nvar compare_1 = require(\"./compare\");\nvar logical_ops_1 = require(\"./logical_ops\");\nvar operation_1 = require(\"./operation\");\nvar tensor_ops_1 = require(\"./tensor_ops\");\nfunction unsortedSegmentSum_(x, segmentIds, numSegments) {\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'unsortedSegmentSum');\n    var $segmentIds = tensor_util_env_1.convertToTensor(segmentIds, 'segmentIds', 'unsortedSegmentSum', 'int32');\n    util_1.assert($segmentIds.dtype === 'int32', 'segmentIds must be of dtype `int32`');\n    util_1.assert(util_1.isInt(numSegments), 'numSegments must be of dtype int');\n    var gradFunc = function (dy) {\n        var derX = function () {\n            return gatherDropNegatives(dy, $segmentIds);\n        };\n        return { $x: derX };\n    };\n    return environment_1.ENV.engine.runKernel(function (backend) {\n        return backend.unsortedSegmentSum($x, $segmentIds, numSegments);\n    }, { $x: $x }, gradFunc);\n}\nfunction gather_(x, indices, axis) {\n    if (axis === void 0) { axis = 0; }\n    var $x = tensor_util_env_1.convertToTensor(x, 'x', 'gather');\n    var $indices = tensor_util_env_1.convertToTensor(indices, 'indices', 'gather', 'int32');\n    util_1.assert($indices.dtype === 'int32', 'Indices must be of dtype `int32`');\n    axis = axis_util_1.parseAxisParam(axis, $x.shape)[0];\n    var grad = function (dy) {\n        var derX = function () {\n            if (axis === 0) {\n                return exports.unsortedSegmentSum(dy, $indices, $x.shape[axis]);\n            }\n            var paramsShape = $x.shape;\n            var indicesSize = $indices.size;\n            var outerShape = paramsShape.slice(0, axis);\n            var outerDims = outerShape.length;\n            var innerShape = paramsShape.slice(axis, paramsShape.length).slice(1);\n            var innerDims = innerShape.length;\n            var outerAxesIndices = arrayRange(0, outerDims);\n            var innerAxesIndices = arrayRange(outerDims + 1, outerDims + 1 + innerDims);\n            var valuesShape = arrayConcat([outerShape, [indicesSize], innerShape]);\n            var values = dy.reshape(valuesShape);\n            var reshapedIndices = $indices.reshape([indicesSize]);\n            var transposeDims = arrayConcat([[outerDims], outerAxesIndices, innerAxesIndices]);\n            var valuesTranspose = values.transpose(transposeDims);\n            var paramsGrad = exports.unsortedSegmentSum(valuesTranspose, reshapedIndices, $x.shape[axis]);\n            var invertTransposeDims = axis_util_1.getUndoAxesPermutation(transposeDims);\n            paramsGrad = paramsGrad.transpose(invertTransposeDims);\n            return paramsGrad;\n        };\n        return { $x: derX };\n    };\n    return environment_1.ENV.engine.runKernel(function (backend) { return backend.gather($x, $indices, axis); }, { $x: $x }, grad);\n}\nfunction arrayRange(start, stop) {\n    var result = [];\n    for (var i = start; i < stop; ++i) {\n        result.push(i);\n    }\n    return result;\n}\nfunction arrayConcat(arrays) {\n    var result = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = 0; j < arrays[i].length; ++j) {\n            result.push(arrays[i][j]);\n        }\n    }\n    return result;\n}\nfunction gatherDropNegatives(x, indices) {\n    var zeroClippedIndices = binary_ops_1.maximum(indices, tensor_ops_1.zerosLike(indices));\n    var gathered = exports.gather(x, zeroClippedIndices);\n    var isPositive = compare_1.greaterEqual(indices, tensor_ops_1.scalar(0, 'int32'));\n    var numIters = gathered.rank - isPositive.rank;\n    for (var i = 0; i < numIters; ++i) {\n        isPositive = array_ops_1.expandDims(isPositive, i + 1);\n    }\n    isPositive = logical_ops_1.logicalAnd(isPositive, tensor_ops_1.ones(gathered.shape, 'bool'));\n    var zeroSlice = tensor_ops_1.zerosLike(gathered);\n    return logical_ops_1.where(isPositive, gathered, zeroSlice);\n}\nexports.gather = operation_1.op({ gather_: gather_ });\nexports.unsortedSegmentSum = operation_1.op({ unsortedSegmentSum_: unsortedSegmentSum_ });\n"},"sourceMaps":{"js":{"version":3,"file":"segment_ops.js","sourceRoot":"","sources":["../../src/ops/segment_ops.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"2b0a0f1d21be2ff95b6628d9baf88860","cacheData":{"env":{}}}