{"id":"node_modules/@tensorflow/tfjs-core/dist/serialization.js","dependencies":[{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\serialization.js.map","includedInParent":true,"mtime":499162500000},{"name":"E:\\htr-final\\package.json","includedInParent":true,"mtime":1603094551417},{"name":"E:\\htr-final\\.babelrc","includedInParent":true,"mtime":1603022514142},{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1603088140582},{"name":"./util","loc":{"line":3,"column":21},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\serialization.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\util.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar Serializable = (function () {\n    function Serializable() {\n    }\n    Serializable.prototype.getClassName = function () {\n        return this.constructor\n            .className;\n    };\n    Serializable.fromConfig = function (cls, config) {\n        return new cls(config);\n    };\n    return Serializable;\n}());\nexports.Serializable = Serializable;\nvar SerializationMap = (function () {\n    function SerializationMap() {\n        this.classNameMap = {};\n    }\n    SerializationMap.getMap = function () {\n        if (SerializationMap.instance == null) {\n            SerializationMap.instance = new SerializationMap();\n        }\n        return SerializationMap.instance;\n    };\n    SerializationMap.register = function (cls) {\n        SerializationMap.getMap().classNameMap[cls.className] =\n            [cls, cls.fromConfig];\n    };\n    return SerializationMap;\n}());\nexports.SerializationMap = SerializationMap;\nfunction registerClass(cls) {\n    util_1.assert(cls.className != null, \"Class being registered does not have the static className property \" +\n        \"defined.\");\n    util_1.assert(typeof cls.className === 'string', \"className is required to be a string, but got type \" +\n        typeof cls.className);\n    util_1.assert(cls.className.length > 0, \"Class being registered has an empty-string as its className, which \" +\n        \"is disallowed.\");\n    SerializationMap.register(cls);\n}\nexports.registerClass = registerClass;\n"},"sourceMaps":{"js":{"version":3,"file":"serialization.js","sourceRoot":"","sources":["../src/serialization.ts"],"names":[],"mappings":";;AAiBA,+BAA8B;AA6C9B;IAAA;IAkCA,CAAC;IAtBC,mCAAY,GAAZ;QACE,OAAQ,IAAI,CAAC,WAAqD;aAC7D,SAAS,CAAC;IACjB,CAAC;IAeM,uBAAU,GAAjB,UACI,GAA+B,EAAE,MAAkB;QACrD,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IACH,mBAAC;AAAD,CAAC,AAlCD,IAkCC;AAlCqB,oCAAY;AA2ClC;IASE;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAKM,uBAAM,GAAb;QACE,IAAI,gBAAgB,CAAC,QAAQ,IAAI,IAAI,EAAE;YACrC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAC;SACpD;QACD,OAAO,gBAAgB,CAAC,QAAQ,CAAC;IACnC,CAAC;IAKM,yBAAQ,GAAf,UAAwC,GAA+B;QACrE,gBAAgB,CAAC,MAAM,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC;YACjD,CAAC,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5B,CAAC;IACH,uBAAC;AAAD,CAAC,AA9BD,IA8BC;AA9BY,4CAAgB;AAuD7B,uBACI,GAA+B;IACjC,aAAM,CACF,GAAG,CAAC,SAAS,IAAI,IAAI,EACrB,qEAAqE;QACrE,UAAU,CAAC,CAAC;IAChB,aAAM,CACF,OAAO,GAAG,CAAC,SAAS,KAAK,QAAQ,EACjC,qDAAqD;QACjD,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC;IAC9B,aAAM,CACF,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EACxB,qEAAqE;QACjE,gBAAgB,CAAC,CAAC;IAE1B,gBAAgB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACjC,CAAC;AAhBD,sCAgBC","sourcesContent":[null]}},"error":null,"hash":"faafcf46580e5e74a5699cadd25956e6","cacheData":{"env":{}}}