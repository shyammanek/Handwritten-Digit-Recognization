{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js","dependencies":[{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\slice_util.js.map","includedInParent":true,"mtime":499162500000},{"name":"E:\\htr-final\\package.json","includedInParent":true,"mtime":1603094551417},{"name":"E:\\htr-final\\.babelrc","includedInParent":true,"mtime":1603022514142},{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1603088140582},{"name":"../util","loc":{"line":3,"column":19},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\slice_util.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\util.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = require(\"../util\");\nfunction assertParamsValid(input, begin, size) {\n    util.assert(input.rank === begin.length, \"Error in slice\" + input.rank + \"D: Length of begin \" + begin + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"));\n    util.assert(input.rank === size.length, \"Error in slice\" + input.rank + \"D: Length of size \" + size + \" must \" +\n        (\"match the rank of the array (\" + input.rank + \").\"));\n    for (var i = 0; i < input.rank; ++i) {\n        util.assert(begin[i] + size[i] <= input.shape[i], \"Error in slice\" + input.rank + \"D: begin[\" + i + \"] + size[\" + i + \"] \" +\n            (\"(\" + (begin[i] + size[i]) + \") would overflow input.shape[\" + i + \"] (\" + input.shape[i] + \")\"));\n    }\n}\nexports.assertParamsValid = assertParamsValid;\nfunction getStridedSlicedInfo(shape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\n    if (beginMask === void 0) { beginMask = 0; }\n    if (endMask === void 0) { endMask = 0; }\n    if (ellipsisMask === void 0) { ellipsisMask = 0; }\n    if (newAxisMask === void 0) { newAxisMask = 0; }\n    if (shrinkAxisMask === void 0) { shrinkAxisMask = 0; }\n    if (ellipsisMask !== 0) {\n        throw new Error('ellipsis mask is not yet supported');\n    }\n    if (newAxisMask !== 0) {\n        throw new Error('new axis mask is not yet supported');\n    }\n    var startIndex = [];\n    var endIndex = [];\n    var shrinkAxis = [];\n    for (var i = 0; i < shape.length; i++) {\n        startIndex[i] = startForAxis(beginMask, begin, strides, shape, i);\n        endIndex[i] = stopForAxis(endMask, end, strides, shape, i);\n        if (shrinkAxisMask & 1 << i) {\n            endIndex[i] = startIndex[i] + 1;\n            shrinkAxis.push(i);\n        }\n    }\n    var size = new Array(shape.length).fill(0);\n    size = size.map(function (d, i) {\n        var count = 0;\n        for (var start = startIndex[i]; !(strides[i] > 0 ? start >= endIndex[i] : start <= endIndex[i]); start += strides[i]) {\n            count += 1;\n        }\n        return count;\n    });\n    return [startIndex, size, shrinkAxis];\n}\nexports.getStridedSlicedInfo = getStridedSlicedInfo;\nfunction startForAxis(beginMask, startIndices, strides, inputShape, axis) {\n    var start = startIndices[axis];\n    if (beginMask & 1 << axis) {\n        if (strides[axis] > 0) {\n            start = Number.MIN_SAFE_INTEGER;\n        }\n        else {\n            start = Number.MAX_SAFE_INTEGER;\n        }\n    }\n    var axisSize = inputShape[axis];\n    if (start < 0) {\n        start += axisSize;\n    }\n    start = util.clamp(0, start, axisSize - 1);\n    return start;\n}\nexports.startForAxis = startForAxis;\nfunction stopForAxis(endMask, stopIndices, strides, inputShape, axis) {\n    var stop = stopIndices[axis];\n    if (endMask & (1 << axis)) {\n        if (strides[axis] > 0) {\n            stop = Number.MAX_SAFE_INTEGER;\n        }\n        else {\n            stop = Number.MIN_SAFE_INTEGER;\n        }\n    }\n    var axisSize = inputShape[axis];\n    if (stop < 0) {\n        stop += axisSize;\n    }\n    if (strides[axis] > 0) {\n        stop = util.clamp(0, stop, axisSize);\n    }\n    else {\n        stop = util.clamp(-1, stop, axisSize - 1);\n    }\n    return stop;\n}\nexports.stopForAxis = stopForAxis;\n"},"sourceMaps":{"js":{"version":3,"file":"slice_util.js","sourceRoot":"","sources":["../../src/ops/slice_util.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"e109a56eacd886f5e08df5ff4a1d921d","cacheData":{"env":{}}}