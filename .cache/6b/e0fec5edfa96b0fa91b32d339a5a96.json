{"id":"node_modules/@tensorflow/tfjs-layers/dist/layers/merge.js","dependencies":[{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\merge.js.map","includedInParent":true,"mtime":1536879379000},{"name":"E:\\htr-final\\package.json","includedInParent":true,"mtime":1603094551417},{"name":"E:\\htr-final\\.babelrc","includedInParent":true,"mtime":1603022514142},{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\package.json","includedInParent":true,"mtime":1603088140582},{"name":"@tensorflow/tfjs-core","loc":{"line":14,"column":26},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\merge.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\tf-core.esm.js"},{"name":"../backend/state","loc":{"line":15,"column":22},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\merge.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\backend\\state.js"},{"name":"../backend/tfjs_backend","loc":{"line":16,"column":16},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\merge.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\backend\\tfjs_backend.js"},{"name":"../engine/topology","loc":{"line":17,"column":25},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\merge.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\engine\\topology.js"},{"name":"../errors","loc":{"line":18,"column":23},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\merge.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\errors.js"},{"name":"../utils/generic_utils","loc":{"line":19,"column":28},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\merge.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\utils\\generic_utils.js"},{"name":"../utils/math_utils","loc":{"line":20,"column":24},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\merge.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\utils\\math_utils.js"},{"name":"../utils/types_utils","loc":{"line":21,"column":28},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\layers\\merge.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-layers\\dist\\utils\\types_utils.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfc = require(\"@tensorflow/tfjs-core\");\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar state_1 = require(\"../backend/state\");\nvar K = require(\"../backend/tfjs_backend\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar mathUtils = require(\"../utils/math_utils\");\nvar types_utils_1 = require(\"../utils/types_utils\");\nvar Merge = (function (_super) {\n    __extends(Merge, _super);\n    function Merge(config) {\n        var _this = _super.call(this, config || {}) || this;\n        _this.supportsMasking = true;\n        return _this;\n    }\n    Merge.prototype.mergeFunction = function (inputs) {\n        throw new errors_1.NotImplementedError();\n    };\n    Merge.prototype.computeElementwiseOpOutputShape = function (shape1, shape2) {\n        if (shape1 == null || shape2 == null) {\n            return null;\n        }\n        else if (shape1.length < shape2.length) {\n            return this.computeElementwiseOpOutputShape(shape2, shape1);\n        }\n        else if (shape2.length === 0) {\n            return shape1;\n        }\n        var outputShape = shape1.slice(0, shape1.length - shape2.length);\n        for (var k = 0; k < shape2.length; ++k) {\n            var i = shape1[shape1.length - shape2.length + k];\n            var j = shape2[k];\n            if (i == null || j == null || i < 0 || j < 0) {\n                outputShape.push(null);\n            }\n            else if (i === 1) {\n                outputShape.push(j);\n            }\n            else if (j === 1) {\n                outputShape.push(i);\n            }\n            else {\n                if (i !== j) {\n                    throw new errors_1.ValueError('Operands could not be broadcast together with shapes ' +\n                        JSON.stringify(shape1) + ' ' + JSON.stringify(shape2));\n                }\n                outputShape.push(i);\n            }\n        }\n        return outputShape;\n    };\n    Merge.prototype.build = function (inputShape) {\n        if (Array.isArray(inputShape) && !Array.isArray(inputShape[0])) {\n            inputShape = [types_utils_1.getExactlyOneShape(inputShape)];\n        }\n        inputShape = inputShape;\n        if (inputShape.length < 2) {\n            throw new errors_1.ValueError('A merge layer should be called on an Array of at least 2 inputs.' +\n                (\" Got \" + inputShape.length + \" input(s).\"));\n        }\n        var batchSizes = [];\n        for (var _i = 0, inputShape_1 = inputShape; _i < inputShape_1.length; _i++) {\n            var shape = inputShape_1[_i];\n            if (shape != null && shape[0] !== null) {\n                batchSizes.push(shape[0]);\n            }\n        }\n        batchSizes = generic_utils.unique(batchSizes);\n        if (batchSizes.length > 1) {\n            throw new errors_1.ValueError(\"Can not merge tensors with different batch sizes. \" +\n                (\"Got tensors with shapes: \" + JSON.stringify(inputShape) + \".\"));\n        }\n        var outputShape = inputShape[0] == null ? null : inputShape[0].slice(1);\n        for (var i = 1; i < inputShape.length; ++i) {\n            var shape = inputShape[i] == null ? null : inputShape[i].slice(1);\n            outputShape = this.computeElementwiseOpOutputShape(outputShape, shape);\n        }\n        var allRanks = inputShape.map(function (shape) { return shape.length; });\n        if (inputShape.indexOf(null) === -1 &&\n            generic_utils.unique(allRanks).length === 1) {\n            this.reshapeRequired = false;\n        }\n        else {\n            this.reshapeRequired = true;\n        }\n    };\n    Merge.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        return tfjs_core_1.tidy(function () {\n            inputs = inputs;\n            if (_this.reshapeRequired) {\n                var reshapedInputs = [];\n                var inputDims = inputs.map(function (input) { return input.rank; });\n                if (inputDims.indexOf(null) === -1) {\n                    var maxNDim = mathUtils.max(inputDims);\n                    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n                        var x = inputs_1[_i];\n                        var xNDim = x.rank;\n                        for (var k = 0; k < maxNDim - xNDim; ++k) {\n                            x = K.expandDims(x, 1);\n                        }\n                        reshapedInputs.push(x);\n                    }\n                    return _this.mergeFunction(reshapedInputs);\n                }\n                else {\n                    var transposed = false;\n                    for (var _a = 0, inputs_2 = inputs; _a < inputs_2.length; _a++) {\n                        var x = inputs_2[_a];\n                        var xNDim = x.rank;\n                        if (xNDim == null) {\n                            var xShape = x.shape;\n                            var batchSize = xShape[0];\n                            var newShape = xShape.slice(1).concat([batchSize]);\n                            var xTransposed = x.reshape([batchSize].concat(mathUtils.arrayProd(xShape.slice(1))));\n                            xTransposed = tfc.transpose(xTransposed, [1, 0]);\n                            xTransposed = xTransposed.reshape(newShape);\n                            reshapedInputs.push(xTransposed);\n                            transposed = true;\n                        }\n                        else if (xNDim > 1) {\n                            var dims = mathUtils.range(1, xNDim).concat([0]);\n                            reshapedInputs.push(tfc.transpose(x, dims));\n                            transposed = true;\n                        }\n                        else {\n                            reshapedInputs.push(x);\n                        }\n                    }\n                    var y = _this.mergeFunction(reshapedInputs);\n                    var yNDim = y.rank;\n                    if (transposed) {\n                        if (yNDim == null) {\n                            var yShape = y.shape;\n                            var yNDim_1 = yShape.length;\n                            var batchSize = yShape[yNDim_1 - 1];\n                            var newShape = [batchSize].concat(yShape.slice(0, yShape.length - 1));\n                            y = tfc.transpose(y.reshape([-1, batchSize]), [1, 0])\n                                .reshape(newShape);\n                        }\n                        else if (yNDim > 1) {\n                            var dims = [yNDim - 1].concat(mathUtils.range(0, yNDim - 1));\n                            y = tfc.transpose(y, dims);\n                        }\n                    }\n                    return y;\n                }\n            }\n            else {\n                return _this.mergeFunction(inputs);\n            }\n        });\n    };\n    Merge.prototype.computeOutputShape = function (inputShape) {\n        inputShape = inputShape;\n        var outputShape;\n        if (inputShape[0] == null) {\n            outputShape = null;\n        }\n        else {\n            outputShape = inputShape[0].slice(1);\n        }\n        for (var i = 1; i < inputShape.length; ++i) {\n            var shape = inputShape[i] == null ? null : inputShape[i].slice(1);\n            outputShape = this.computeElementwiseOpOutputShape(outputShape, shape);\n        }\n        var batchSizes = [];\n        for (var _i = 0, inputShape_2 = inputShape; _i < inputShape_2.length; _i++) {\n            var shape = inputShape_2[_i];\n            if (shape != null && shape[0] !== null) {\n                batchSizes.push(shape[0]);\n            }\n        }\n        batchSizes = generic_utils.unique(batchSizes);\n        if (batchSizes.length === 1) {\n            outputShape = batchSizes.concat(outputShape);\n        }\n        else {\n            outputShape = [null].concat(outputShape);\n        }\n        return outputShape;\n    };\n    return Merge;\n}(topology_1.Layer));\nexports.Merge = Merge;\nvar Add = (function (_super) {\n    __extends(Add, _super);\n    function Add(config) {\n        return _super.call(this, config) || this;\n    }\n    Add.prototype.mergeFunction = function (inputs) {\n        return tfjs_core_1.tidy(function () {\n            var output = inputs[0].clone();\n            for (var i = 1; i < inputs.length; ++i) {\n                output = tfc.add(output, inputs[i]);\n            }\n            return output;\n        });\n    };\n    Add.className = 'Add';\n    return Add;\n}(Merge));\nexports.Add = Add;\ntfjs_core_1.serialization.registerClass(Add);\nfunction add(config) {\n    if (Array.isArray(config)) {\n        var layer = new Add({});\n        return layer.apply(config);\n    }\n    else {\n        return new Add(config);\n    }\n}\nexports.add = add;\nvar Multiply = (function (_super) {\n    __extends(Multiply, _super);\n    function Multiply(config) {\n        return _super.call(this, config) || this;\n    }\n    Multiply.prototype.mergeFunction = function (inputs) {\n        return tfjs_core_1.tidy(function () {\n            var output = inputs[0].clone();\n            for (var i = 1; i < inputs.length; ++i) {\n                output = tfc.mul(output, inputs[i]);\n            }\n            return output;\n        });\n    };\n    Multiply.className = 'Multiply';\n    return Multiply;\n}(Merge));\nexports.Multiply = Multiply;\ntfjs_core_1.serialization.registerClass(Multiply);\nfunction multiply(config) {\n    if (Array.isArray(config)) {\n        var layer = new Multiply({});\n        return layer.apply(config);\n    }\n    else {\n        return new Multiply(config);\n    }\n}\nexports.multiply = multiply;\nvar Average = (function (_super) {\n    __extends(Average, _super);\n    function Average(config) {\n        return _super.call(this, config) || this;\n    }\n    Average.prototype.mergeFunction = function (inputs) {\n        return tfjs_core_1.tidy(function () {\n            var output = inputs[0].clone();\n            for (var i = 1; i < inputs.length; ++i) {\n                output = tfc.add(output, inputs[i]);\n            }\n            return tfc.mul(state_1.getScalar(1 / inputs.length), output);\n        });\n    };\n    Average.className = 'Average';\n    return Average;\n}(Merge));\nexports.Average = Average;\ntfjs_core_1.serialization.registerClass(Average);\nfunction average(config) {\n    if (Array.isArray(config)) {\n        var layer = new Average({});\n        return layer.apply(config);\n    }\n    else {\n        return new Average(config);\n    }\n}\nexports.average = average;\nvar Maximum = (function (_super) {\n    __extends(Maximum, _super);\n    function Maximum(config) {\n        return _super.call(this, config) || this;\n    }\n    Maximum.prototype.mergeFunction = function (inputs) {\n        return tfjs_core_1.tidy(function () {\n            var output = inputs[0];\n            for (var i = 1; i < inputs.length; ++i) {\n                output = tfc.maximum(output, inputs[i]);\n            }\n            return output;\n        });\n    };\n    Maximum.className = 'Maximum';\n    return Maximum;\n}(Merge));\nexports.Maximum = Maximum;\ntfjs_core_1.serialization.registerClass(Maximum);\nfunction maximum(config) {\n    if (Array.isArray(config)) {\n        var layer = new Maximum({});\n        return layer.apply(config);\n    }\n    else {\n        return new Maximum(config);\n    }\n}\nexports.maximum = maximum;\nvar Minimum = (function (_super) {\n    __extends(Minimum, _super);\n    function Minimum(config) {\n        return _super.call(this, config) || this;\n    }\n    Minimum.prototype.mergeFunction = function (inputs) {\n        return tfjs_core_1.tidy(function () {\n            var output = inputs[0];\n            for (var i = 1; i < inputs.length; ++i) {\n                output = tfc.minimum(output, inputs[i]);\n            }\n            return output;\n        });\n    };\n    Minimum.className = 'Minimum';\n    return Minimum;\n}(Merge));\nexports.Minimum = Minimum;\ntfjs_core_1.serialization.registerClass(Minimum);\nfunction minimum(config) {\n    if (Array.isArray(config)) {\n        var layer = new Minimum({});\n        return layer.apply(config);\n    }\n    else {\n        return new Minimum(config);\n    }\n}\nexports.minimum = minimum;\nvar Concatenate = (function (_super) {\n    __extends(Concatenate, _super);\n    function Concatenate(config) {\n        var _this = _super.call(this, config) || this;\n        _this.DEFAULT_AXIS = -1;\n        if (config == null) {\n            config = {};\n        }\n        _this.axis = config.axis == null ? _this.DEFAULT_AXIS : config.axis;\n        _this.supportsMasking = true;\n        _this.reshapeRequired = false;\n        return _this;\n    }\n    Concatenate.prototype.build = function (inputShape) {\n        if (!(Array.isArray(inputShape) && Array.isArray(inputShape[0])) ||\n            inputShape.length === 1) {\n            throw new errors_1.ValueError('A `Concatenate` layer should be called on a list of at least 2 ' +\n                'inputs');\n        }\n        inputShape = inputShape;\n        var allNoneShape = true;\n        for (var _i = 0, inputShape_3 = inputShape; _i < inputShape_3.length; _i++) {\n            var shape = inputShape_3[_i];\n            if (shape != null) {\n                allNoneShape = false;\n                break;\n            }\n        }\n        if (allNoneShape) {\n            return;\n        }\n        var shapeSet = [];\n        for (var i = 0; i < inputShape.length; ++i) {\n            var shapeWithoutConcatAxis = inputShape[i].slice();\n            shapeWithoutConcatAxis.splice(this.axis, 1);\n            var exists = false;\n            for (var _a = 0, shapeSet_1 = shapeSet; _a < shapeSet_1.length; _a++) {\n                var shape = shapeSet_1[_a];\n                if (tfjs_core_1.util.arraysEqual(shape, shapeWithoutConcatAxis)) {\n                    exists = true;\n                    break;\n                }\n            }\n            if (!exists) {\n                shapeSet.push(shapeWithoutConcatAxis);\n            }\n        }\n        if (shapeSet.length > 1) {\n            throw new errors_1.ValueError('A `Concatenate` layer requires inputs with matching shapes ' +\n                'except for the concat axis. Got input shapes: ' +\n                JSON.stringify(inputShape));\n        }\n    };\n    Concatenate.prototype.mergeFunction = function (inputs) {\n        var _this = this;\n        return tfjs_core_1.tidy(function () {\n            return K.concatenate(inputs, _this.axis);\n        });\n    };\n    Concatenate.prototype.computeOutputShape = function (inputShape) {\n        if (!(Array.isArray(inputShape) && Array.isArray(inputShape[0]))) {\n            throw new errors_1.ValueError('A `Concatenate` layer should be called on a list of inputs.');\n        }\n        var inputShapes = inputShape;\n        var outputShape = inputShapes[0].slice();\n        var axis = this.axis < 0 ? outputShape.length + this.axis : this.axis;\n        for (var _i = 0, _a = inputShapes.slice(1); _i < _a.length; _i++) {\n            var shape = _a[_i];\n            if (outputShape[axis] == null || shape[axis] == null) {\n                outputShape[axis] = null;\n                break;\n            }\n            outputShape[axis] += shape[axis];\n        }\n        return outputShape;\n    };\n    Concatenate.prototype.getConfig = function () {\n        var config = {\n            'axis': this.axis,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    Concatenate.className = 'Concatenate';\n    return Concatenate;\n}(Merge));\nexports.Concatenate = Concatenate;\ntfjs_core_1.serialization.registerClass(Concatenate);\nfunction concatenate(config) {\n    if (Array.isArray(config)) {\n        var layer = new Concatenate({});\n        return layer.apply(config);\n    }\n    else {\n        return new Concatenate(config);\n    }\n}\nexports.concatenate = concatenate;\n"},"sourceMaps":{"js":{"version":3,"file":"merge.js","sourceRoot":"","sources":["../../src/layers/merge.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"905c1128b4cd07fd371b70dad2bdf7c8","cacheData":{"env":{}}}