{"id":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/unaryop_gpu.js","dependencies":[{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\unaryop_gpu.js.map","includedInParent":true,"mtime":499162500000},{"name":"E:\\htr-final\\package.json","includedInParent":true,"mtime":1603094551417},{"name":"E:\\htr-final\\.babelrc","includedInParent":true,"mtime":1603022514142},{"name":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1603088140582},{"name":"../../ops/erf_util","loc":{"line":3,"column":23},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\unaryop_gpu.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\erf_util.js"},{"name":"../../ops/selu_util","loc":{"line":4,"column":24},"parent":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernels\\webgl\\unaryop_gpu.js","resolved":"E:\\htr-final\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\selu_util.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar erf_util = require(\"../../ops/erf_util\");\nvar selu_util = require(\"../../ops/selu_util\");\nvar UnaryOpProgram = (function () {\n    function UnaryOpProgram(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = \"\\n      uniform float NAN;\\n      float unaryOperation(float x) {\\n        \" + opSnippet + \"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \";\n    }\n    UnaryOpProgram.prototype.getCustomSetupFunc = function () {\n        var _this = this;\n        return function (gpgpu, webGLProgram) {\n            if (_this.startLoc == null) {\n                _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'NAN');\n                if (_this.startLoc == null) {\n                    return;\n                }\n            }\n            gpgpu.gl.uniform1f(_this.startLoc, NaN);\n        };\n    };\n    return UnaryOpProgram;\n}());\nexports.UnaryOpProgram = UnaryOpProgram;\nvar CHECK_NAN_SNIPPET = \"if (isNaN(x)) return x;\";\nexports.ABS = \"return abs(x);\";\nexports.RELU = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : x;\\n\";\nexports.ELU = \"return (x >= 0.0) ? x : (exp(x) - 1.0);\";\nexports.SELU = \"\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = \" + selu_util.SELU_SCALEALPHA + \";\\n  float scale = \" + selu_util.SELU_SCALE + \";\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n\";\nfunction STEP(alpha) {\n    if (alpha === void 0) { alpha = 0.0; }\n    return CHECK_NAN_SNIPPET + (\"\\n    return x > 0.0 ? 1.0 : float(\" + alpha + \");\\n  \");\n}\nexports.STEP = STEP;\nexports.NEG = \"return -x;\";\nexports.CEIL = \"return ceil(x);\";\nexports.FLOOR = \"return floor(x);\";\nexports.SIGN = \"\\n  if (isNaN(x)) { return 0.0; }\\n  return sign(x);\\n\";\nexports.ROUND = \"\\n  // OpenGL ES does not support round function.\\n  // The algorithm is based on banker's rounding.\\n  float base = floor(x);\\n  if ((x - base) < 0.5) {\\n    return floor(x);\\n  } else if ((x - base) > 0.5) {\\n    return ceil(x);\\n  } else {\\n    if (mod(base, 2.0) == 0.0) {\\n      return base;\\n    } else {\\n      return base + 1.0;\\n    }\\n  }\\n\";\nexports.EXP = \"return exp(x);\";\nexports.EXPM1 = \"return exp(x) - 1.0;\";\nexports.LOG = \"if (x < 0.0) return NAN;\\n  return log(x);\";\nexports.LOG1P = \"return log(1.0 + x);\";\nexports.SQRT = \"return sqrt(x);\";\nexports.RSQRT = \"return inversesqrt(x);\";\nexports.SIGMOID = \"return 1.0 / (1.0 + exp(-1.0 * x));\";\nexports.SOFTPLUS = \"\\n  float epsilon = 1.1920928955078125e-7;\\n  float threshold = log(epsilon) + 2.0;\\n\\n  bool too_large = x > -threshold;\\n  bool too_small = x < threshold;\\n\\n  float result;\\n  float exp_x = exp(x);\\n\\n  if (too_large){\\n    result = x;\\n  }\\n  else if (too_small){\\n    result = exp_x;\\n  }\\n  else{\\n    result = log(exp_x + 1.0);\\n  }\\n  return result;\\n\";\nexports.SIN = CHECK_NAN_SNIPPET + \"\\n  return sin(x);\\n\";\nexports.COS = CHECK_NAN_SNIPPET + \"\\n  return cos(x);\\n\";\nexports.TAN = \"return tan(x);\";\nexports.ASIN = \"return asin(x);\";\nexports.ACOS = \"return acos(x);\";\nexports.ATAN = CHECK_NAN_SNIPPET + \"\\n  return atan(x);\\n\";\nexports.SINH = \"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n\";\nexports.COSH = \"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n\";\nexports.TANH = \"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n\";\nexports.ASINH = \"return log(x + sqrt(x * x + 1.0));\";\nexports.ACOSH = CHECK_NAN_SNIPPET + \"\\n  if (x < 1.0) return NAN;\\n  return log(x + sqrt(x * x - 1.0));\";\nexports.ATANH = CHECK_NAN_SNIPPET + \"\\n  if ((x < -1.0) || (x > 1.0)) return NAN;\\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;\";\nexports.ERF = \"\\n  // Error function is calculated approximately with elementary function.\\n  // See \\\"Handbook of Mathematical Functions with Formulas,\\n  // Graphs, and Mathematical Tables\\\", Abramowitz and Stegun.\\n  float p = \" + erf_util.ERF_P + \";\\n  float a1 = \" + erf_util.ERF_A1 + \";\\n  float a2 = \" + erf_util.ERF_A2 + \";\\n  float a3 = \" + erf_util.ERF_A3 + \";\\n  float a4 = \" + erf_util.ERF_A4 + \";\\n  float a5 = \" + erf_util.ERF_A5 + \";\\n\\n  float t = 1.0 / (1.0 + p * x);\\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\\n\";\nexports.SQUARE = \"return x * x;\";\nexports.RECIPROCAL = \"return 1.0 / x;\";\nexports.LOGICAL_NOT = \"return float(!(x >= 1.0));\";\nexports.TO_INT = \"return float(int(x));\";\n"},"sourceMaps":{"js":{"version":3,"file":"unaryop_gpu.js","sourceRoot":"","sources":["../../../src/kernels/webgl/unaryop_gpu.ts"],"names":[],"mappings":";;AAiBA,6CAA+C;AAC/C,+CAAiD;AAKjD;IAQE,wBAAY,MAAgB,EAAE,SAAiB;QAP/C,kBAAa,GAAG,CAAC,GAAG,CAAC,CAAC;QAQpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,gFAGV,SAAS,yJASd,CAAC;IACJ,CAAC;IAED,2CAAkB,GAAlB;QAAA,iBAYC;QAXC,OAAO,UAAC,KAAmB,EAAE,YAA0B;YACrD,IAAI,KAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBACzB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,yBAAyB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;gBACrE,IAAI,KAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;oBAGzB,OAAO;iBACR;aACF;YACD,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CAAC,AAtCD,IAsCC;AAtCY,wCAAc;AAwC3B,IAAM,iBAAiB,GAAG,yBAAyB,CAAC;AAEvC,QAAA,GAAG,GAAG,gBAAgB,CAAC;AAEvB,QAAA,IAAI,GAAG,iBAAiB,GAAG,mCAEvC,CAAC;AAEW,QAAA,GAAG,GAAG,yCAAyC,CAAC;AAEhD,QAAA,IAAI,GAAG,+IAGG,SAAS,CAAC,eAAe,2BAC9B,SAAS,CAAC,UAAU,wEAErC,CAAC;AAEF,cAAqB,KAAW;IAAX,sBAAA,EAAA,WAAW;IAC9B,OAAO,iBAAiB,IAAG,wCACM,KAAK,WACrC,CAAA,CAAC;AACJ,CAAC;AAJD,oBAIC;AAEY,QAAA,GAAG,GAAG,YAAY,CAAC;AAEnB,QAAA,IAAI,GAAG,iBAAiB,CAAC;AAEzB,QAAA,KAAK,GAAG,kBAAkB,CAAC;AAE3B,QAAA,IAAI,GAAG,wDAGnB,CAAC;AAEW,QAAA,KAAK,GAAG,gWAepB,CAAC;AAEW,QAAA,GAAG,GAAG,gBAAgB,CAAC;AAEvB,QAAA,KAAK,GAAG,sBAAsB,CAAC;AAE/B,QAAA,GAAG,GAAG,4CACF,CAAC;AAEL,QAAA,KAAK,GAAG,sBAAsB,CAAC;AAE/B,QAAA,IAAI,GAAG,iBAAiB,CAAC;AAEzB,QAAA,KAAK,GAAG,wBAAwB,CAAC;AAEjC,QAAA,OAAO,GAAG,qCAAqC,CAAC;AAehD,QAAA,QAAQ,GAAG,yWAoBvB,CAAC;AAEW,QAAA,GAAG,GAAG,iBAAiB,GAAG,sBAEtC,CAAC;AAEW,QAAA,GAAG,GAAG,iBAAiB,GAAG,sBAEtC,CAAC;AAEW,QAAA,GAAG,GAAG,gBAAgB,CAAC;AAEvB,QAAA,IAAI,GAAG,iBAAiB,CAAC;AAEzB,QAAA,IAAI,GAAG,iBAAiB,CAAC;AAEzB,QAAA,IAAI,GAAG,iBAAiB,GAAG,uBAEvC,CAAC;AAEW,QAAA,IAAI,GAAG,8DAGnB,CAAC;AAEW,QAAA,IAAI,GAAG,+DAGnB,CAAC;AAEW,QAAA,IAAI,GAAG,sFAGnB,CAAC;AAEW,QAAA,KAAK,GAAG,oCAAoC,CAAC;AAE7C,QAAA,KAAK,GAAG,iBAAiB,GAAG,oEAEJ,CAAC;AAEzB,QAAA,KAAK,GAAG,iBAAiB,GAAG,6FAEK,CAAC;AAElC,QAAA,GAAG,GAAG,4NAIL,QAAQ,CAAC,KAAK,wBACb,QAAQ,CAAC,MAAM,wBACf,QAAQ,CAAC,MAAM,wBACf,QAAQ,CAAC,MAAM,wBACf,QAAQ,CAAC,MAAM,wBACf,QAAQ,CAAC,MAAM,kHAI7B,CAAC;AAEW,QAAA,MAAM,GAAG,eAAe,CAAC;AAEzB,QAAA,UAAU,GAAG,iBAAiB,CAAC;AAE/B,QAAA,WAAW,GAAG,4BAA4B,CAAC;AAE3C,QAAA,MAAM,GAAG,uBAAuB,CAAC","sourcesContent":[null]}},"error":null,"hash":"205e56154f7d3cdf8b0af8e229368a5d","cacheData":{"env":{}}}